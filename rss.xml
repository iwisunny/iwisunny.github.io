<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[SunnyWang's RSS Feed]]></title><description><![CDATA[Every memo in web, sunnywang's blog]]></description><link>https://iwisunny.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Wed, 14 Oct 2020 03:23:40 GMT</lastBuildDate><item><title><![CDATA[javascript vs webassembly fibonacci benchmark]]></title><description><![CDATA[Rust 环境准备 我准备用来编译到，当然你也可以用 , ,  来 compile 到 wasm. 首选准备 rust 环境，安装 创建 rust lib，编译到 wasm 使用 cargo(rust 的包管理器和 build 工具) 创建一个 type 为 library…]]></description><link>https://iwisunny.github.io/2020-10-14/js-wasm-fibonacci-compare</link><guid isPermaLink="false">https://iwisunny.github.io/2020-10-14/js-wasm-fibonacci-compare</guid><pubDate>Wed, 14 Oct 2020 02:31:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/images/js-wasm-bench.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Rust 环境准备&lt;/h2&gt;
&lt;p&gt;我准备用&lt;code class=&quot;language-text&quot;&gt;rust&lt;/code&gt;来编译到&lt;code class=&quot;language-text&quot;&gt;wasm&lt;/code&gt;，当然你也可以用 &lt;code class=&quot;language-text&quot;&gt;c/c++&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;go&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;assemblyScript/typescript&lt;/code&gt; 来 compile 到 wasm.&lt;/p&gt;
&lt;p&gt;首选准备 rust 环境，安装&lt;code class=&quot;language-text&quot;&gt;rustup&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;curl --proto &amp;#39;=https&amp;#39; --tlsv1.2 https://sh.rustup.rs -sSf | sh

export PATH=&amp;quot;$HOME/.cargo/bin:$PATH&amp;quot;

# 检查rustc 安装成功
rustc --version
# 检查 cargo 安装成功
cargo --version

# 安装wasm的编译目标
rustup target add wasm32-unknown-unknown&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;创建 rust lib，编译到 wasm&lt;/h2&gt;
&lt;p&gt;使用 cargo(rust 的包管理器和 build 工具) 创建一个 type 为 library 的项目&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;cargo new begin_wasm --lib&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;cargo 初始化的目录结构是&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;├── Cargo.toml
└── src
    └── lib.rs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;src/lib.rs&lt;/code&gt;就是要编译到 wasm 的 rust 文件，先加入斐波那契数的函数，稍后编译到 wasm 里。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;rust&quot;&gt;&lt;pre class=&quot;language-rust&quot;&gt;&lt;code class=&quot;language-rust&quot;&gt;&lt;span class=&quot;token attribute attr-name&quot;&gt;#[no_mangle]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; u32&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;-&gt;&lt;/span&gt; u64 &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;match&lt;/span&gt; n &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        _ &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;n &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;n &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;编译到 wasm&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;cargo build --target wasm32-unknown-unknown&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这时在项目目录下会多出一个&lt;code class=&quot;language-text&quot;&gt;target&lt;/code&gt;目录，默认 cargo 是在 debug 模式下编译，wasm 文件体积会稍大点。
生成的 wasm 文件在 &lt;code class=&quot;language-text&quot;&gt;target/wasm32-unknwon-unknown/debug/begin_wasm.wasm&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;JS 端创建测试页面&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;touch index.html&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;index.html 的内容如下&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token doctype&quot;&gt;&amp;lt;!DOCTYPE html&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;rust wasm&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Fibnacci benchmark: JS vs Wasm&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;

    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;fib-js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;

      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;fib-wasm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;

    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;
      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; wasm_file &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;target/wasm32-unknown-unknown/debug/begin_wasm.wasm&quot;&lt;/span&gt;

      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;fib&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;n &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; n &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;n &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;n &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; t1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; res_js &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; t2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

      document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;fib-js&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;innerHTML &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;==JS==: Calc fib(40), time=&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;t2 &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; t1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;
        &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;s, res=&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;res_js&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;

      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; memory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;WebAssembly&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Memory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; initial&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; maximum&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// alloc wasm memory size&lt;/span&gt;

      WebAssembly&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;instantiateStreaming&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;wasm_file&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        js&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; mem&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; memory &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; wasm_exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; mod&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;instance&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports

        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; t1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; res_wasm &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; wasm_exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; t2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

        document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;token string&quot;&gt;&quot;fib-wasm&quot;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;innerHTML &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;==WASM==: Calc fib(40), time=&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;t2 &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; t1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;
          &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;s, res=&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;res_wasm&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;开启本地 http server&lt;/h2&gt;
&lt;p&gt;本地测试的话，可以有很多方式开启 http server，你可以用 cargo 安装 rust 版的 http server&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;cargo install https

http  # 启动http server&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;也可以 nodejs 的 npm 安装 http server&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;npm i http-server

http-server .&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后打开浏览器(比如我的 chrome)，进到测试页面, benchmark 对比：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/js-wasm-fib.jpg&quot;&gt;&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;以上是对比 js 和 wasm 计算 斐波那契数列的第 42 项，也是很大的一个数了，js 用的时间竟然比 wasm 少?（什么原因呢，各位观众可以在评论区留言发表看法:-p）
wasm 的性能和 c/c++差不多，这里应该是 chrome v8 引擎在处理 js 的计算时做了编译优化，让 js 计算 fib(42) 甚至比 wasm 还快。&lt;/p&gt;
&lt;p&gt;当然局部的 benchmark 对比看不出什么优势，在重计算的项目(cpu 密集型)中，wasm 的优势就会比 js 明显。&lt;/p&gt;
&lt;p&gt;未来 WASM 会和 JS 优势互补，二者不是对立的关系，wasm 也不会取代 js，wasm 只是增强了 js，就像 typescript 只是给 js 加了类型和静态分析。&lt;/p&gt;
&lt;p&gt;很愉快的 WASM 之旅，happy coding :)&lt;/p&gt;</content:encoded></item><item><title><![CDATA[styled-components add media query]]></title><description><![CDATA[Media query 在下的使用，和普通 css 下是一样的，只是 styled-components 支持 SCSS 的语法
，另外可以在 es6 的模板字符串(tagged template)下有独特的写法。  传统的写法 styled-components…]]></description><link>https://iwisunny.github.io/2020-10-14/styled-components-add-media-query</link><guid isPermaLink="false">https://iwisunny.github.io/2020-10-14/styled-components-add-media-query</guid><pubDate>Wed, 14 Oct 2020 01:36:00 GMT</pubDate><content:encoded>&lt;p&gt;Media query 在&lt;code class=&quot;language-text&quot;&gt;styled-components&lt;/code&gt;下的使用，和普通 css 下是一样的，只是 styled-components 支持 SCSS 的语法
，另外可以在 es6 的模板字符串(tagged template)下有独特的写法。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/styled-comp-scss.jpeg&quot;&gt;&lt;/p&gt;
&lt;h2&gt;传统的写法&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;#wrapper {
  display: flex;
  flex-direction: row;
  @media (max-width: 768px) {
    flex-direction: column;
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;styled-components 下的写法&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; styled &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;styled-components&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Wrapper &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; styled&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;div&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;
  display: flex;
  flex-direction: row;
  @media (max-width: 768px) {
    flex-direction: column;
  }
&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;styled-component 下的 scss 写法&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Article &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; styled&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;div&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;
  &gt; h3 {
    margin-bottom: 1rem;
    &gt; a {
      text-decoration: none;
    }
  }
  
  .snapshots{
    display: flex;
    
    &gt; img {
      @media (min-width: 1024px} {
        width: 30%;        
      }
    }
  }
&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;styled.div&lt;/code&gt; 后面接的是 模板字符串，可以插值(interpolate)，所以可以把不同分辨率的配置抽出来：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// config/device-size.js&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; size &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  mobile&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;425px&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  tablet&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;768px&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  desktop&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;1024px&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; device &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  mobile&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;(max-width: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;size&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mobile&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  tablet&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;(min-width: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;size&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;tablet&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;) and (max-width: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;size&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;desktop&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  desktop&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;(min-width: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;size&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;desktop&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最终的 styled-components media query 写法&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Article &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Card&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;
  &gt; h3 {
    margin-bottom: 1rem;
    &gt; a {
      text-decoration: none;
    }
  }

  .snapshots {
    display: flex;

    &gt; img {
      @media &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;desktop&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; {
        width: 30%;
      }
    }
  }
&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[gatsby page add pagination]]></title><description><![CDATA[gatsby 下分页的难点 gatsby 生成的都是静态网页，数据是通过 graphql 聚合的，这里查询数据不像传统的关系型数据库那样
直接通过, 来控制分页数据。gatsby 的数据源可能是每个 markdown 经过 nodejs 转换后的纯 json…]]></description><link>https://iwisunny.github.io/2020-10-13/gatsby-add-pagination</link><guid isPermaLink="false">https://iwisunny.github.io/2020-10-13/gatsby-add-pagination</guid><pubDate>Tue, 13 Oct 2020 14:20:48 GMT</pubDate><content:encoded>&lt;h2&gt;gatsby 下分页的难点&lt;/h2&gt;
&lt;p&gt;gatsby 生成的都是静态网页，数据是通过 graphql 聚合的，这里查询数据不像传统的关系型数据库那样
直接通过&lt;code class=&quot;language-text&quot;&gt;limit&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;offset&lt;/code&gt;来控制分页数据。gatsby 的数据源可能是每个 markdown 经过 nodejs 转换后的纯 json，
再通过 graphql 的接口来查本地的 json 数据，也就是页面加载到浏览器后，不能像传统的发起 ajax 请求，因为没有一个接收分页参数的后端。&lt;/p&gt;
&lt;p&gt;所以只能在每个页面生成之前就提前拿到全局的分页数据，比如 总页数，当前页码，再注入页面，让页面在浏览器加载就可以使用这些数据。&lt;/p&gt;
&lt;p&gt;考虑到 gatsby 生成页面的逻辑是通过在 &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt;里调用 nodejs 的接口，最典型的就是 &lt;code class=&quot;language-text&quot;&gt;createPages&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;createPage&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;gatsby-node 生成分页列表&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;createPages&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; graphql&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; actions &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; createPage &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; actions

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;graphql&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;
      {
        allMarkdownRemark(
          sort: { fields: [frontmatter___date], order: DESC }
          limit: 1000
        ) {
          edges {
            node {
              fields {
                slug
              }
              frontmatter {
                title
              }
            }
          }
        }
      }
    &lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; posts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allMarkdownRemark&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; postsPerPage &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; numPages &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;posts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; postsPerPage&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// save numPages to global data&lt;/span&gt;
  fs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;writeFileSync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__dirname&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;src/data/num-pages.js&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;export default &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;numPages&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// create paginated page&lt;/span&gt;
  Array&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; length&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; numPages &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;_&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;createPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      path&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;/blog&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;/blog/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;i &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      component&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;./src/templates/blog-list.js&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      context&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        limit&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; postsPerPage&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        skip&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; postsPerPage&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        numPages&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        currentPage&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// create each post&lt;/span&gt;
  posts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;post&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; index&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; previous &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; posts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; posts&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;index &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; next &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; posts&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;index &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node

    &lt;span class=&quot;token function&quot;&gt;createPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      path&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;/blog&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fields&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;slug&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      component&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;./src/templates/blog-post.js&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      context&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        slug&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fields&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;slug&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        previous&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        next&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面是完整的在 nodejs 端生成单独分页的列表页和每个子页面的逻辑。&lt;/p&gt;
&lt;p&gt;这里涉及两个模板，一个是每个分页对应的列表页（对应 &lt;code class=&quot;language-text&quot;&gt;src/templates/blog-list.js&lt;/code&gt;），一个是每个 blog 的详情页(对应 &lt;code class=&quot;language-text&quot;&gt;src/templates/blog-post.js&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;templates/blog-list&lt;/code&gt;的代码如下&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; graphql &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Layout &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;components/layout&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; ListItem &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;components/list-item&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Pagination &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;components/pagination&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BlogList&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Component&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pageContext &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; siteTitle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;site&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;siteMetadata&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; posts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allMarkdownRemark&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; currentPage&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; numPages &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pageContext

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Layout location&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; title&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;siteTitle&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;posts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; node &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;ListItem node&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; key&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fields&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;slug&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Pagination numPages&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;numPages&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; currentPage&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;currentPage&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;Layout&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; blogListQuery &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;
  query blogListQuery($skip: Int!, $limit: Int!) {
    site {
      siteMetadata {
        title
      }
    }

    allMarkdownRemark(
      sort: { fields: [frontmatter___date], order: DESC }
      limit: $limit
      skip: $skip
    ) {
      edges {
        node {
          excerpt
          fields {
            slug
          }
          frontmatter {
            date
            title
            description
            tags
          }
        }
      }
    }
  }
&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最终的效果如图：
&lt;img src=&quot;/images/gatsby-pagination.jpg&quot;&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[docker hyperkit进程cpu占用超过100%]]></title><description><![CDATA[解决方法很简单： 在 设置里，把 cpu 调成 1 核。 这样  后续 cpu 占用不会超过 100%]]></description><link>https://iwisunny.github.io/2020-05-06/docker-hyperkit-cpu-very-high</link><guid isPermaLink="false">https://iwisunny.github.io/2020-05-06/docker-hyperkit-cpu-very-high</guid><pubDate>Wed, 06 May 2020 11:26:00 GMT</pubDate><content:encoded>&lt;p&gt;解决方法很简单： 在&lt;code class=&quot;language-text&quot;&gt;docker desktop&lt;/code&gt; 设置里，把 cpu 调成 1 核。&lt;/p&gt;
&lt;p&gt;这样 &lt;code class=&quot;language-text&quot;&gt;com.docker.hyperkit&lt;/code&gt; 后续 cpu 占用不会超过 100%&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/docker-cpu.jpg&quot;&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Be a productive team member]]></title><description><![CDATA[天赋可以让你赢得比赛，但是团队合作与智慧可以让你赢得总冠军 -- michael jordan…]]></description><link>https://iwisunny.github.io/2020-04-08/be-a-productive-team-member</link><guid isPermaLink="false">https://iwisunny.github.io/2020-04-08/be-a-productive-team-member</guid><pubDate>Wed, 08 Apr 2020 11:11:46 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;天赋可以让你赢得比赛，但是团队合作与智慧可以让你赢得总冠军 -- michael jordan&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;了解实情&lt;/h2&gt;
&lt;p&gt;出色的团队合作者了解团队需要做什么以及为什么要这么做。他们知道自己的技能和品性对集体的努力有何助益。 简单地听命于人会让人迅速产生愤恨情绪并与团队格格不入。将自己当作团队一员时，您知道自己的位置和身处该位置的原因，也知道如何支持与改善他人的工作。&lt;/p&gt;
&lt;h2&gt;支持队友&lt;/h2&gt;
&lt;p&gt;当工作进展顺利时，应该首先考虑对队友的工作给予认可和鼓励。如果遇到困难，应在可以提供帮助的情况下向队友伸出援助之手。&lt;/p&gt;
&lt;h2&gt;提出建设性的批评&lt;/h2&gt;
&lt;p&gt;因为您了解集体目标，也明白您和队友如何才能为实现这些目标贡献自己的力量，所以在遇到障碍时，您可以提供建议和帮助。但是一定要小心。只有在感受到您的真诚，而且您提出的是建设性、有帮助并适合于实现共同目标的批评时，受到批评的人才会报以良好的反应。所以，您要真诚和诚恳地提出批评。真正擅长团队合作的人不会靠暗害同事来让自己“得分”。&lt;/p&gt;
&lt;h2&gt;处理冲突&lt;/h2&gt;
&lt;p&gt;在职场中，想要完全避免冲突几乎不可能。无论如何，人与人之间都会发生冲突，尤其是当你们都在紧张的时限或一定的压力下工作时。您要记住，好团队有一样重要的美德，那就是它能将各种技能和不同性格凝聚成合力。如果确实出现了意见分歧，擅长团队合作的人会将解决办法和想法拿到桌面上，并且能够接受批评，只要这些批评像他们提出的批评那样具有建设性。无论您处于职业生涯的哪个阶段，也不管您的抱负是什么，冲突管理都是一项真正重要的技能和核心领导能力。&lt;/p&gt;
&lt;h2&gt;清楚自己的界限&lt;/h2&gt;
&lt;p&gt;无论是处理冲突还是设法达到他人的期望，知道自己的限度和（引申开来）自己的界限在哪里才是自信的表现。致力于完成团队项目时，这种投入也要切合实际。过分投入或急于取悦他人都会导致压力、怨恨和耽误集体项目成功的障碍。知道何时应该说“不”或者如何与团队领导或同事谈判以便在合理的期限内顺利完成工作非常重要。&lt;/p&gt;
&lt;p&gt;想要变得擅长团队协作有时并不容易，需要经过时间和经验的磨炼。&lt;/p&gt;
&lt;p&gt;但是，坚持下去并保持本心，不改初衷，同时始终尊重别人，就一定能成为最终获胜团队的一员。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[npmrc常用配置]]></title><description><![CDATA[在平时的 web 开发中，常用的一些 npmrc 配置 在项目根目录创建 文件，加上如下内容]]></description><link>https://iwisunny.github.io/2020-04-07/note-about-npmrc</link><guid isPermaLink="false">https://iwisunny.github.io/2020-04-07/note-about-npmrc</guid><pubDate>Tue, 07 Apr 2020 10:06:46 GMT</pubDate><content:encoded>&lt;p&gt;在平时的 web 开发中，常用的一些 npmrc 配置&lt;/p&gt;
&lt;p&gt;在项目根目录创建 &lt;code class=&quot;language-text&quot;&gt;.npmrc&lt;/code&gt;文件，加上如下内容&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;// 切换到国内的npm源
&lt;span class=&quot;token assign-left variable&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;https://registry.npm.taobao.org

// 如果平时喜欢yarn，不想生成npm的package-lock
package-lock&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;false

// 切换node-sass的下载镜像
sass-binary-site&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;https://npm.taobao.org/mirrors/node-sass

// 添加私有仓库，便于安装私有部署的scope package
@scope:registry&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;http://172.16.0.60:xxxx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[django webpack hot reload]]></title><description><![CDATA[1. 设置后端环境 2. 设置 django 的 settings.py 3. 设置 webpack (开发环境) 4. django 模板 实际项目中的演示： django webpack热加载]]></description><link>https://iwisunny.github.io/2020-04-07/django-webpack-hot-reload</link><guid isPermaLink="false">https://iwisunny.github.io/2020-04-07/django-webpack-hot-reload</guid><pubDate>Tue, 07 Apr 2020 08:06:46 GMT</pubDate><content:encoded>&lt;h2&gt;1. 设置后端环境&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# init python virtrual env&lt;/span&gt;
pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; virtualenv
virtualenv venv
&lt;span class=&quot;token builtin class-name&quot;&gt;source&lt;/span&gt; ./venv/bin/activate

pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; django-webpack-loader&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2. 设置 django 的 settings.py&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;WEBPACK_LOADER &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;DEFAULT&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;CACHE&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; not DEBUG,
        &lt;span class=&quot;token string&quot;&gt;&apos;BUNDLE_DIR_NAME&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;dist/&apos;&lt;/span&gt;, &lt;span class=&quot;token comment&quot;&gt;# must end with slash&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;STATS_FILE&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; os.path.join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;BASE_DIR, &lt;span class=&quot;token string&quot;&gt;&apos;static/dist/webpack-stats.json&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;,
        &lt;span class=&quot;token string&quot;&gt;&apos;POLL_INTERVAL&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.1&lt;/span&gt;,
        &lt;span class=&quot;token string&quot;&gt;&apos;TIMEOUT&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; None,
        &lt;span class=&quot;token string&quot;&gt;&apos;IGNORE&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.+\.hot-update.js&apos;&lt;/span&gt;, &lt;span class=&quot;token string&quot;&gt;&apos;.+\.map&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;3. 设置 webpack (开发环境)&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;const path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; require&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;path&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
const webpackNotifier &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; require&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;webpack-notifier&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
const ManifestPlugin &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; require&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;webpack-manifest-plugin&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
const BundleTracker &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; require&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;webpack-bundle-tracker&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

const devServerPort &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; process.env.DEV_SERVER_PORT &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9000&lt;/span&gt;

module.exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  mode: &lt;span class=&quot;token string&quot;&gt;&apos;development&apos;&lt;/span&gt;,
  devtool: &lt;span class=&quot;token string&quot;&gt;&apos;cheap-module-eval-source-map&apos;&lt;/span&gt;,
  entry: &lt;span class=&quot;token string&quot;&gt;&apos;./src/index.js&apos;&lt;/span&gt;,
  output: &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    path: path.resolve&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__dirname, &lt;span class=&quot;token string&quot;&gt;&apos;static/dist&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;,
    filename: &lt;span class=&quot;token string&quot;&gt;&apos;[name].js&apos;&lt;/span&gt;,
    chunkFilename: &lt;span class=&quot;token string&quot;&gt;&apos;[name].chunk.js&apos;&lt;/span&gt;,

    // &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; you want hmr, point to webpack-dev-server path, not django static &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt;
    publicPath: &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;http://localhost:$&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;devServerPort&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;/static/dist/&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;,
  devServer: &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    contentBase: path.resolve&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__dirname, &lt;span class=&quot;token string&quot;&gt;&apos;static/dist&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;,
    compress: true,
    port: process.env.DEV_SERVER_PORT &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9000&lt;/span&gt;,
    headers: &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&apos;Access-Control-Allow-Origin&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;*&apos;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;,
    historyApiFallback: true,

    // HMR
    hotOnly: true,
    inline: true,
    clientLogLevel: &lt;span class=&quot;token string&quot;&gt;&apos;warn&apos;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;,
  plugins: &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    new ManifestPlugin&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      publicPath: &lt;span class=&quot;token string&quot;&gt;&apos;static/dist/&apos;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;,
    new BundleTracker&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      filename: &lt;span class=&quot;token string&quot;&gt;&apos;./static/dist/webpack-stats.json&apos;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;4. django 模板&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;{% load custom_tags %} {% load render_bundle from webpack_loader %}
&lt;span class=&quot;token doctype&quot;&gt;&amp;lt;!DOCTYPE html&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{ site.lang|default:&apos;zh-cn&apos; }}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;utf-8&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt;
      &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;viewport&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token attr-name&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;width=device-width, initial-scale=1, shrink-to-fit=no&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;

    {% block styles %} {% if is_prod %}
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;stylesheet&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{ &apos;styles.css&apos; | get_manifest_asset }}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
    {% endif %} {% endblock %}
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    {% block content %}
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;app&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    {% endblock %} {% block scripts %} {% if is_prod %}
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{ &apos;styles.js&apos; | get_manifest_asset }}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{ &apos;main.js&apos; | get_manifest_asset }}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    {% else %} {% render_bundle &apos;main&apos; %} {% endif %} {% endblock %}
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;实际项目中的演示：&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/django-webpack-hot-reload.jpg&quot; alt=&quot;django webpack热加载&quot;&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Mac 10.15 安装 libvips]]></title><description><![CDATA[gatsby 的图片处理库很方便，但是 sharp 依赖 c++编写的 。
当 Mac 升级到 catalina(10.15), 安装时一直失败，当尝试源码编译，会出现依赖的错误。
还有在 catalina…]]></description><link>https://iwisunny.github.io/2020-04-06/mac-catalina-install-libvips</link><guid isPermaLink="false">https://iwisunny.github.io/2020-04-06/mac-catalina-install-libvips</guid><pubDate>Mon, 06 Apr 2020 08:06:46 GMT</pubDate><content:encoded>&lt;p&gt;gatsby 的图片处理库&lt;code class=&quot;language-text&quot;&gt;sharp&lt;/code&gt;很方便，但是 sharp 依赖 c++编写的 &lt;code class=&quot;language-text&quot;&gt;libvips&lt;/code&gt;。
当 Mac 升级到 catalina(10.15), &lt;code class=&quot;language-text&quot;&gt;brew&lt;/code&gt;安装时一直失败，当尝试源码编译，会出现&lt;code class=&quot;language-text&quot;&gt;tiff&lt;/code&gt;依赖的错误。
还有&lt;code class=&quot;language-text&quot;&gt;zlib&lt;/code&gt;在 catalina 默认的 &lt;code class=&quot;language-text&quot;&gt;pkg-config&lt;/code&gt;的配置&lt;code class=&quot;language-text&quot;&gt;zlib.pc&lt;/code&gt;错误。针对我遇到的情形，解决方式如下。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;// 从github 下载最新的gz包，vips-8.9.1.tar.gz

tar xf vips-8.9.1.tar.gz
cd vips-8.9.1

./configuration --with-jpeg --with-png --without-tiff

make

sudo make install

rm -rf node_modules

npm i --unsafe-perm --build-from-source --verbose&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;改进之处&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 markdown 内引入 png 图片，gatsby 有时会编译出错 (可能是 libvips 编译的参数不对， 或者&lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-sharp&lt;/code&gt;的 bug)&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;brew info vips&lt;/code&gt; 显示的 vips 版本始终是 8.8.x，尝试升级 brew，拉取&lt;code class=&quot;language-text&quot;&gt;brew/versions&lt;/code&gt;仓库也报错，可能是&lt;code class=&quot;language-text&quot;&gt;brew/core&lt;/code&gt;的 bug&lt;/li&gt;
&lt;li&gt;等 brew 官方发新版，最简单的就是通过&lt;code class=&quot;language-text&quot;&gt;brew install vips&lt;/code&gt;安装 libvips&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考文档&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sharp.pixelplumbing.com/install&quot;&gt;https://sharp.pixelplumbing.com/install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://libvips.github.io/libvips/install.html#building-libvips-from-a-source-tarball&quot;&gt;https://libvips.github.io/libvips/install.html#building-libvips-from-a-source-tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/21032&quot;&gt;https://github.com/gatsbyjs/gatsby/issues/21032&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[google search operator]]></title><description><![CDATA[allinanchor: If you start your query with allinanchor:, Google restricts results to pages containing all query terms you specify in the…]]></description><link>https://iwisunny.github.io/2019-10-26-google-advanced-operators</link><guid isPermaLink="false">https://iwisunny.github.io/2019-10-26-google-advanced-operators</guid><pubDate>Sat, 26 Oct 2019 04:03:00 GMT</pubDate><content:encoded>&lt;h2&gt;allinanchor:&lt;/h2&gt;
&lt;p&gt;If you start your query with allinanchor:, Google restricts results to pages containing all query terms you specify in the anchor text on links to the page. For example, [ allinanchor: best museums sydney ] will return only pages in which the anchor text on links to the pages contain the words “best,” “museums,” and “sydney.”&lt;/p&gt;
&lt;p&gt;Anchor text is the text on a page that is linked to another web page or a different place on the current page. When you click on anchor text, you will be taken to the page or place on the page to which it is linked. When using allinanchor: in your query, do not include any other search operators. The functionality of allinanchor: is also available through the Advanced Web Search page, under Occurrences.&lt;/p&gt;
&lt;h2&gt;allintext:&lt;/h2&gt;
&lt;p&gt;If you start your query with allintext:, Google restricts results to those containing all the query terms you specify in the text of the page. For example, [ allintext: travel packing list ] will return only pages in which the words “travel,” “packing,” and “list” appear in the text of the page. This functionality can also be obtained through the Advanced Web Search page, under Occurrences.&lt;/p&gt;
&lt;h2&gt;allintitle:&lt;/h2&gt;
&lt;p&gt;If you start your query with allintitle:, Google restricts results to those containing all the query terms you specify in the title. For example, [ allintitle: detect plagiarism ] will return only documents that contain the words “detect” and “plagiarism” in the title. This functionality can also be obtained through the Advanced Web Search page, under Occurrences.&lt;/p&gt;
&lt;p&gt;The title of a webpage is usually displayed at the top of the browser window and in the first line of Google’s search results for a page. The author of a website specifies the title of a page with the HTML TITLE element. There’s only one title in a webpage. When using allintitle: in your query, do not include any other search operators. The functionality of allintitle: is also available through the Advanced Web Search page, under Occurrences.&lt;/p&gt;
&lt;p&gt;In Image Search, the operator allintitle: will return images in files whose names contain the terms that you specify.&lt;/p&gt;
&lt;p&gt;In Google News, the operator allintitle: will return articles whose titles include the terms you specify.&lt;/p&gt;
&lt;h2&gt;allinurl:&lt;/h2&gt;
&lt;p&gt;If you start your query with allinurl:, Google restricts results to those containing all the query terms you specify in the URL. For example, [ allinurl: google faq ] will return only documents that contain the words “google” and “faq” in the URL, such as “www.google.com/help/faq.html”. This functionality can also be obtained through the Advanced Web Search page, under Occurrences.&lt;/p&gt;
&lt;p&gt;In URLs, words are often run together. They need not be run together when you’re using allinurl:.&lt;/p&gt;
&lt;p&gt;In Google News, the operator allinurl: will return articles whose titles include the terms you specify.&lt;/p&gt;
&lt;p&gt;The Uniform Resource Locator, more commonly known as URL, is the address that specifies the location of a file on the Internet. When using allinurl: in your query, do not include any other search operators. The functionality of allinurl: is also available through the Advanced Web Search page, under Occurrences.&lt;/p&gt;
&lt;h2&gt;author:&lt;/h2&gt;
&lt;p&gt;If you include author: in your query, Google will restrict your Google Groups results to include newsgroup articles by the author you specify. The author can be a full or partial name or email address. For example, [ children author:john author:doe ] or [ children author:doe@someaddress.com ] return articles that contain the word “children” written by John Doe or doe@someaddress.com.&lt;/p&gt;
&lt;p&gt;Google will search for exactly what you specify. If your query contains [ author:”John Doe” ] (with quotes), Google won’t find articles where the author is specified as “Doe, John.”&lt;/p&gt;
&lt;h2&gt;cache:&lt;/h2&gt;
&lt;p&gt;The query cache:url will display Google’s cached version of a web page, instead of the current version of the page. For example, [ cache:www.eff.org ] will show Google’s cached version of the Electronic Frontier Foundation home page.&lt;/p&gt;
&lt;p&gt;Note: Do not put a space between cache: and the URL (web address).&lt;/p&gt;
&lt;p&gt;On the cached version of a page, Google will highlight terms in your query that appear after the cache: search operator. For example, [ cache:www.pandemonia.com/flying/ fly diary ] will show Google’s cached version of Flight Diary in which Hamish Reid’s documents what’s involved in learning how to fly with the terms “fly” and “diary” highlighted.&lt;/p&gt;
&lt;h2&gt;define:&lt;/h2&gt;
&lt;p&gt;If you start your query with define:, Google shows definitions from pages on the web for the term that follows. This advanced search operator is useful for finding definitions of words, phrases, and acronyms. For example, [ define: blog ] will show definitions for “Blog” (weB LOG).&lt;/p&gt;
&lt;h2&gt;ext:&lt;/h2&gt;
&lt;p&gt;This is an undocumented alias for filetype:.&lt;/p&gt;
&lt;h2&gt;filetype:&lt;/h2&gt;
&lt;p&gt;If you include filetype:suffix in your query, Google will restrict the results to pages whose names end in suffix. For example, [ web page evaluation checklist filetype:pdf ] will return Adobe Acrobat pdf files that match the terms “web,” “page,” “evaluation,” and “checklist.” You can restrict the results to pages whose names end with pdf and doc by using the OR operator, e.g. [ email security filetype:pdf OR filetype:doc ].&lt;/p&gt;
&lt;p&gt;When you don’t specify a File Format in the Advanced Search Form or the filetype: operator, Google searches a variety of file formats; see the table in File Type Conversion.&lt;/p&gt;
&lt;h2&gt;group:&lt;/h2&gt;
&lt;p&gt;If you include group: in your query, Google will restrict your Google Groups results to newsgroup articles from certain groups or subareas. For example, [ sleep group:misc.kids.moderated ] will return articles in the group misc.kids.moderated that contain the word “sleep” and [ sleep group:misc.kids ] will return articles in the subarea misc.kids that contain the word “sleep.”&lt;/p&gt;
&lt;h2&gt;id:&lt;/h2&gt;
&lt;p&gt;This is an undocumented alias for info:.&lt;/p&gt;
&lt;h2&gt;inanchor:&lt;/h2&gt;
&lt;p&gt;If you include inanchor: in your query, Google will restrict the results to pages containing the query terms you specify in the anchor text or links to the page. For example, [ restaurants inanchor:gourmet ] will return pages in which the anchor text on links to the pages contain the word “gourmet” and the page contains the word “restaurants.”&lt;/p&gt;
&lt;h2&gt;info:&lt;/h2&gt;
&lt;p&gt;The query info:URL will present some information about the corresponding web page. For instance, [ info:gothotel.com ] will show information about the national hotel directory GotHotel.com home page.&lt;/p&gt;
&lt;p&gt;Note: There must be no space between the info: and the web page URL.&lt;/p&gt;
&lt;p&gt;This functionality can also be obtained by typing the web page URL directly into a Google search box.&lt;/p&gt;
&lt;h2&gt;insubject:&lt;/h2&gt;
&lt;p&gt;If you include insubject: in your query, Google will restrict articles in Google Groups to those that contain the terms you specify in the subject. For example, [ insubject:”falling asleep” ] will return Google Group articles that contain the phrase “falling asleep” in the subject.&lt;/p&gt;
&lt;p&gt;Equivalent to intitle:.&lt;/p&gt;
&lt;h2&gt;intext:&lt;/h2&gt;
&lt;p&gt;The query intext:term restricts results to documents containing term in the text. For instance, [ Hamish Reid intext:pandemonia ] will return documents that mention the word “pandemonia” in the text, and mention the names “Hamish” and “Reid” anywhere in the document (text or not).&lt;/p&gt;
&lt;p&gt;Note: There must be no space between the intext: and the following word.&lt;/p&gt;
&lt;p&gt;Putting intext: in front of every word in your query is equivalent to putting allintext: at the front of your query, e.g., [ intext:handsome intext:poets ] is the same as [ allintext: handsome poets ].&lt;/p&gt;
&lt;h2&gt;intitle:&lt;/h2&gt;
&lt;p&gt;The query intitle:term restricts results to documents containing term in the title. For instance, [ flu shot intitle:help ] will return documents that mention the word “help” in their titles, and mention the words “flu” and “shot” anywhere in the document (title or not).&lt;/p&gt;
&lt;p&gt;Note: There must be no space between the intitle: and the following word.&lt;/p&gt;
&lt;p&gt;Putting intitle: in front of every word in your query is equivalent to putting allintitle: at the front of your query, e.g., [ intitle:google intitle:search ] is the same as [ allintitle: google search ].&lt;/p&gt;
&lt;h2&gt;inurl:&lt;/h2&gt;
&lt;p&gt;If you include inurl: in your query, Google will restrict the results to documents containing that word in the URL. For instance, [ inurl:print site:www.googleguide.com ] searches for pages on Google Guide in which the URL contains the word “print.” It finds pdf files that are in the directory or folder named “print” on the Google Guide website. The query [ inurl:healthy eating ] will return documents that mention the words “healthy” in their URL, and mention the word “eating” anywhere in the document.&lt;/p&gt;
&lt;p&gt;Note: There must be no space between the inurl: and the following word.&lt;/p&gt;
&lt;p&gt;Putting inurl: in front of every word in your query is equivalent to putting allinurl: at the front of your query, e.g., [ inurl:healthy inurl:eating ] is the same as [ allinurl: healthy eating ].&lt;/p&gt;
&lt;p&gt;In URLs, words are often run together. They need not be run together when you’re using inurl:.&lt;/p&gt;
&lt;h2&gt;link:&lt;/h2&gt;
&lt;p&gt;The query link:URL shows pages that point to that URL. For example, to find pages that point to Google Guide’s home page, enter:&lt;/p&gt;
&lt;p&gt;[ link:www.googleguide.com ]&lt;/p&gt;
&lt;p&gt;Note: According to Google’s documentation, “you cannot combine a link: search with a regular keyword search.”&lt;/p&gt;
&lt;p&gt;Also note that when you combine link: with another advanced operator, Google may not return all the pages that match. The following queries should return lots of results, as you can see if you remove the -site: term in each of these queries.&lt;/p&gt;
&lt;p&gt;Find links to the Google home page not on Google’s own site.&lt;/p&gt;
&lt;p&gt;[ link:www.google.com -site:google.com ]&lt;/p&gt;
&lt;p&gt;Find links to the UK Owners Direct home page not on its own site.&lt;/p&gt;
&lt;p&gt;[ link:www.www.ownersdirect.co.uk -site:ownersdirect.co.uk ]&lt;/p&gt;
&lt;h2&gt;location:&lt;/h2&gt;
&lt;p&gt;If you include location: in your query on Google News, only articles from the location you specify will be returned. For example, [ queen location:canada ] will show articles that match the term “queen” from sites in Canada. Many other country names work; try them and see.&lt;/p&gt;
&lt;p&gt;Two-letter US state abbreviations match individual US states, and two-letter Canadian province abbreviations (like NS for Nova Scotia) also work — although some provinces don’t have many newspapers online, so you may not get many results. Some other two-letter abbreviations — such as UK for the United Kingdom — are also available.&lt;/p&gt;
&lt;h2&gt;movie:&lt;/h2&gt;
&lt;p&gt;If you include movie: in your query, Google will find movie-related information. For examples, see Google’s Blog.&lt;/p&gt;
&lt;h2&gt;related:&lt;/h2&gt;
&lt;p&gt;The query related:URL will list web pages that are similar to the web page you specify. For instance, [ related:www.consumerreports.org ] will list web pages that are similar to the Consumer Reports home page.&lt;/p&gt;
&lt;p&gt;Note: Don’t include a space between the related: and the web page url.&lt;/p&gt;
&lt;p&gt;You can also find similar pages from the “Similar pages” link on Google’s main results page, and from the similar selector in the Page-Specific Search area of the Advanced Search page. If you expect to search frequently for similar pages, consider installing a GoogleScout browser button, which scouts for similar pages.&lt;/p&gt;
&lt;h2&gt;site:&lt;/h2&gt;
&lt;p&gt;If you include site: in your query, Google will restrict your search results to the site or domain you specify. For example, [ admissions site:www.lse.ac.uk ] will show admissions information from London School of Economics’ site and [ peace site:gov ] will find pages about peace within the .gov domain. You can specify a domain with or without a period, e.g., either as .gov or gov.&lt;/p&gt;
&lt;p&gt;Note: Do not include a space between the “site:” and the domain.&lt;/p&gt;
&lt;p&gt;You can use many of the search operators in conjunction with the basic search operators +, –, OR, and &quot; &quot;. For example, to find information on Windows security from all sites except microsoft.com, enter:&lt;/p&gt;
&lt;p&gt;[ windows security –site:microsoft.com ]&lt;/p&gt;
&lt;p&gt;You can also restrict your results to a site or domain through the domains selector on the Advanced Search page.&lt;/p&gt;
&lt;h2&gt;source:&lt;/h2&gt;
&lt;p&gt;If you include source: in your query, Google News will restrict your search to articles from the news source with the ID you specify. For example, [ election source:new&lt;em&gt;york&lt;/em&gt;times ] will return articles with the word “election” that appear in the New York Times.&lt;/p&gt;
&lt;p&gt;To find a news source ID, enter a query that includes a term and the name of the publication you’re seeking. You can also specify the publication name in the “news source” field in the Advanced News Search form. You’ll find the news source ID in the query box, following the source: search operator. For example, let’s say you enter the publication name Ha’aretz in the News Source box, then you click the Google Search button. The results page appears, and its search box contains [ peace source:ha&lt;em&gt;aretz__subscription&lt;/em&gt; ]. This means that the news source ID is ha&lt;em&gt;aretz__subscription&lt;/em&gt;. This query will only return articles that include the word “peace” from the Israeli newspaper Ha’aretz.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[From jekyll to gatsby]]></title><description><![CDATA[While hosting personal site on github pages, jekyll is fine.
But nowadays static site generator like  is more popular which
is based on the…]]></description><link>https://iwisunny.github.io/2019-08-31-from-jekyll-to-gatsby</link><guid isPermaLink="false">https://iwisunny.github.io/2019-08-31-from-jekyll-to-gatsby</guid><pubDate>Sat, 31 Aug 2019 14:12:00 GMT</pubDate><content:encoded>&lt;p&gt;While hosting personal site on github pages, jekyll is fine.
But nowadays static site generator like &lt;code class=&quot;language-text&quot;&gt;GatsbyJs&lt;/code&gt; is more popular which
is based on the fantastic &lt;code class=&quot;language-text&quot;&gt;React&lt;/code&gt;, also my favorite language is &lt;code class=&quot;language-text&quot;&gt;javascript&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So shifting from jekyll to gatsby seems a win-win step.&lt;/p&gt;
&lt;p&gt;Happy blogging :-)&lt;/p&gt;
&lt;h4&gt;Reference&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.org/&quot;&gt;GatsbyJs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jarednielsen.com/deploy-gatsbyjs-github-pages-user/&quot;&gt;How to Deploy a GatsbyJS Blog on GitHub Pages as a User Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[life is a state of mind]]></title><description><![CDATA[The subject of this article you are about to read reveals a crucial secret of your life.
It concerns a subject that is liable to make…]]></description><link>https://iwisunny.github.io/2015-10-25-life-is-a-state-of-mind</link><guid isPermaLink="false">https://iwisunny.github.io/2015-10-25-life-is-a-state-of-mind</guid><pubDate>Sun, 25 Oct 2015 04:03:00 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;The subject of this article you are about to read reveals a crucial secret of your life.
It concerns a subject that is liable to make fundamental changes in your outlook on the material world.
The content of this article is not just a different approach, or a philosophical thought.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一个人从出生就受到条件的制约，因为人居住的环境完全是物质性的。人在这种外界条件的影响下逐渐长大，所有的想法
都是在物质世界的基础上形成。我们从外界获得的所有信息来源于我们的 5 种感官(Sensors)，视觉、听觉、嗅觉、味觉、触觉
形成了我们的世界。人从出生就依赖这五种感官，这是我们感知世界的唯一途径。当超越感官，在思维模型上考察
一个和以往认识完全不同的世界，这个世界是真是假，who knows and who cares ?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;人是一个映像(Image)，经历的每一件事都是一个短暂的感觉，宇宙是一个影子(Shadow)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;眼睛是如何看到这个世界的？&lt;/h3&gt;
&lt;p&gt;眼睛看见一个事物是一个逐步的过程，首先光线的光量子从物体射向我们的眼睛，穿过眼角膜，最后在眼睛后面的视网膜聚集。
光信号转化成电信号，从视神经元传到大脑后部，最终在大脑后部这个几立方厘米的区域形成图像。我们一生中看到的所有事物，
经历的所有事情都在这个狭小黑暗的区域形成图像。“相由心生”从这个意义上讲佛学和科学是汇合的。当我们说我们看到了东西，
其实是电信号传送到了大脑后沿的成像区域，也就是大脑接收到了特定的电信号，而大脑是完全隔离光线的，大脑不可能和光线发生
联系，换句话说光线永远照不到大脑内，大脑只是处理外界光线产生的电信号就形成了我们看到的五彩缤纷的世界。&lt;/p&gt;
&lt;p&gt;与视觉类似，其它感官的形成也同样是外界的刺激给大脑反馈的电信号。在我们的一生中，从大脑中起源的一切并不是真实的外界，
而只是大脑复制的映像，我们误认为大脑中的映像是外界存在的实际物质。&lt;/p&gt;
&lt;h3&gt;大脑中的外部世界&lt;/h3&gt;
&lt;p&gt;上面的分析指出了一个不可否认的推论，我们在世界或者说宇宙中，看到、摸到、听到，从而觉得是物质的东西，其实只是大脑中的
电信号。如果外部物质反射的光线被阻断或者光线刺激大脑的电信号被阻断，我们就看不到外部的物质了，显然，我们看见的世界只是
大脑对电信号的解读。天文望远镜里看到的宇宙星空，不是说那些物体有几百万光年远，其实就在我们的大脑中。当你坐在屋子里看电视，
你的感觉和身体让你觉得自己在屋子里，其实是屋子和你的身体在你的大脑里，只是你大脑里的一个映像。现在回到我们前面一直提到的
“外界”这个词，其实外界是我们大脑中的外界，我们根本无法跳出大脑里的世界，既然我们不能到达外面真实的世界，我们又凭什么
确定外界真实存在？？显然，我们无法确定外界是否存在。我们居住的世界只是大脑里感觉的世界，（a state of our minds）。可以做一个小小的
思维实验，假设把大脑和身体分离，大脑分离出来继续维持生理机能，在大脑外面连接一个能记录信息的电脑（或者示波器），将电脑记录的数据全部
转换为电子脉冲刻录到光盘，然后反过来将光盘记录的信息用电脑读出转换成电信号再输入给大脑，你想大脑里会发生什么？
大脑会读出这些电信号，产生前面看到的，听到的，摸到的等等物体的感觉，过去就被重现了。只要电脑不停地给大脑施加电刺激，这个大脑中虚幻的世界
就一直持续。我们只是意识（life is a state of minds）,我们很容易被感觉欺骗，认为有一些真实存在的东西，比如梦里的东西？。。&lt;/p&gt;
&lt;h3&gt;梦里的世界&lt;/h3&gt;
&lt;p&gt;在我们平常的世界，我们能有看到，听到，摸到物体的感觉，在梦里我们也有和真实世界一样的感觉，但是梦里，我们没有手，也没有眼睛，我们怎么来的这种感觉，
梦里也没有任何可以让我们摸和看的“真实”的物体，认为我们在梦中感到的东西是真实的，本身就是一种错觉。一个人在床上沉睡，梦中自己在一个不同的世界，
也许在梦中的世界他在上天入地，做着非同寻常的事情，但事实上他就在床上一步也没有离开。如果我们能在梦中平安的生活着，
只有在梦醒的时候，我们才会意识到是做了一场梦，同样的道理也适用于我们正生活的这个被我们认为真实存在的世界。当我们从一场梦中醒来，没有理由不相信我们
仍然处在另一个更长的梦中，这都是大脑给我们营造的梦境，这个更长的梦我们叫它真实的世界。我们之所以认为梦是幻境，现在的世界是真的，只是我们的惯性思维。
我们在地球上的生活可能不是清醒的，我们认为现在是在实际生活着，认为似乎刚刚从梦中醒来。&lt;/p&gt;
&lt;h3&gt;谁是自我&lt;/h3&gt;
&lt;p&gt;所有的事实和分析都指向一个更重要的问题，如果我们生活的所有情形都只是固有的感知，那我们的大脑是什么？我们的意识是什么？如果意识是由物质组成，就像我们的身体
是由物质组成一样，那意识本身也只是一个被感知的对象，就像外界的物体一样。如果意识只是感觉，是由视觉和触觉等感官创造的，那么到底是什么接收到了这些感觉？
是谁看到了，谁触摸到了，闻到了，感觉到了。。？是谁在思考，推断，和感觉到“我是我”？我们这个年代一些重要领域的思考也最终指向了这个问题。
The ghost in the machine, the small man in the small man ，“我”在哪里？谁在用我的“意识”？谁意识到了“意识”本身？我们在寻找谁看见了这一切。
实际上， 形而上存在一个东西能够看到听到，那就是灵魂(Soul)，我们所认为的现实世界，是灵魂看见听见的集合。就像梦中我们的身体和感知的世界不是真实存在的一样，
我们身处的宇宙也不是真实存在的，也不是物理的实在，唯一真实存在的，是灵魂。事物只是灵魂的感知，物理，化学和生物的法则都指向一个结论---人的存在是幻觉。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[why the night sky is dark]]></title><description><![CDATA[…]]></description><link>https://iwisunny.github.io/2015-04-09-why-the-night-sky-is-dark</link><guid isPermaLink="false">https://iwisunny.github.io/2015-04-09-why-the-night-sky-is-dark</guid><pubDate>Thu, 09 Apr 2015 04:03:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/images/galaxy.jpg&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;夜空总给我一种神秘的感觉，似乎要告诉我什么，像一位睿智的老者、默默的友人……
当你仰望它时内心有莫名的平静……
宇宙中的问题没有简单与复杂的区分，简单与复杂这些形容词，都掺杂了人的主观情感……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个生活中司空见惯的现象却蕴涵着深刻的道理(&lt;code class=&quot;language-text&quot;&gt;关于奥伯斯佯谬&lt;/code&gt;)。不动脑子的解释就是：夜晚地球的一面背对着太阳，因为没有阳光照射，所以是黑色的。&lt;/p&gt;
&lt;p&gt;其实回答的人连问题都没有理解清楚就开始抢答了，我问的是夜空为什么是黑色的，记住是“夜空”，是那片星空，而不是你下意识说出的地球表面。
也许你要反驳了，地球将太阳光挡住了一部分，而挡住的那部分视线上的夜空因为没有太阳光照射而呈现黑色。好了，反驳也很简单，考虑一下太阳和地球的体积，
一个太阳大概能装下 160 万个地球，由于太阳和地球距离很远（一个天文单位），所以太阳的视直径很小，你依然觉得地球挡住了很大一部分太阳光？。&lt;/p&gt;
&lt;p&gt;用一下隔离法吧，假设你将太阳这个宇宙中的小不点从宇宙天幕上移开了，再来对自己提问（假设你还在地球上活着）--- 为什么夜空是黑色的？&lt;/p&gt;
&lt;p&gt;到这里故事似乎变的有点趣味了，有人解释了，夜空之所以是黑色的是因为那里没有星星（恒星）。这样的回答无法令人满意，宇宙中存在无限多个近均匀分布的恒星，
我们的视线无论从哪个方向看去都能碰到恒星，类似各向同性的 3K 宇宙微波背景辐射，因而夜空应该到处是明亮的呀。还有人解释说星际空间存在大量的气体和尘埃，
遥远的星光被尘埃吸收导致光度减弱，因而夜空是黑色的。嗯，这么解释稍微有点靠谱，但是仔细想想也是行不通的，因为宇宙中恒星的总光度是趋于无限大的，
星际物质吸收那么多能量必然自身也会变热而发光……这些看似有道理的解释却都得出了与事实不相符的结论。&lt;/p&gt;
&lt;p&gt;宇宙的基本要素是时间和空间，有时当你闭上双眼，是否会小声猜测这无法形容的黑暗是否就是宇宙诞生之初的场景，于是人类的思维就逆向追寻时间和空间的脚步，
而宇宙大爆炸理论就是这种思维下的产物。难道“夜空为什么是黑色的”也与大爆炸扯上了联系？细细想来不是扯上了联系而是自然而然的联系……&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1915 年，斯里弗发现大多数河外星系的光谱线都偏向正常位置向红色端移动，这就是“光谱红移”现象。
根据多普勒效应，光谱红移告诉我们大多数河外星系在远离我们而去。
1926 年，哈勃进一步研究了 30 个河外星系的红移得出了哈勃定律：V=H*D 星系正在离开我们向四面八方远去，星系的距离与红移量的大小成正比。&lt;br&gt;
那些 100 亿光年远的类星体，远离我们的速度甚至达到了 0.8 倍光速。&lt;br&gt;
红移的大小表征了河外星系远离我们的退行速度。哈勃定律说明星系越远它们的退行速度越高，也就是说我们观测的宇宙正在膨胀！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有了上述的两个重要观测再来分析夜空是黑色的本质，由于我们观测的宇宙在膨胀，那么恒星发出的光会因为红移（光谱线向红色端移动）而使能量减弱，
星系越远红移越大，导致光线能量越低光度越暗。一些遥远的星系发出的光到达观测者的眼睛时能量已经衰减为零，所以我们观测到的夜空是黑色的。&lt;/p&gt;
&lt;p&gt;这时候有人要欢呼了，好像这个问题已经解决了，不然！回顾我们的分析过程是在假设宇宙大爆炸成立的情况下作出的，有人会这么推理，因为夜空是黑色的这一现象
是不争的事实，而如今几乎所有理论都无法很好的解释这个问题，唯独大爆炸理论能比较圆满的解释它，那么我们是否能作出这种推论：大爆炸理论是正确的。&lt;/p&gt;
&lt;p&gt;答案显然不行，这不是天文学上的苛刻，这样解释就陷入了循环论证的逻辑怪圈中。正确的态度是：夜空黑暗现象是宇宙大爆炸留下的蛛丝马迹，或许大爆炸理论是正确的
，又或许还有另一个更加正确的理论未被人类发现。就好像在解释大尺度空间的引力问题上，相对论是比牛顿力学更正确的理论，但你依然无法说明相对论就是正确的，
虽然水星近日点反常进动和强引力场光线弯曲等等现象佐证了相对论的引力理论，同样 3K 微波背景辐射等现象也佐证了大爆炸理论，但是要推翻一个论断，只需要一个反例
就够了。于是很多论断就成了既无法被证明正确，也无法被证明错误，游离在三界之外，成了一连串的哥德尔命题，而哥德尔命题又让人联想起了埃舍尔在房间画的那些奇
特的图画，那些图画又让人听到了巴赫那动人的管风琴曲，像朱自清闻到荷塘的花香，仿佛听到远处高楼上渺远的歌声。宇宙就这么悠然自得的演奏着自己气势恢宏的交响曲.&lt;/p&gt;
&lt;p&gt;当然，站在量子力学那诡异的视角里，“夜空为什么是黑色的”可以这样解析，我们的研究对象是夜空，外在表征是黑色，而人类奇怪于这种黑色与夜空之间的关联，
便有此一问“为什么？”。因为按照推断夜空不应该是黑色的啊，可以说成是亮白色的或者其他什么颜色的，---- 这又与我们观测的夜空是黑色的不一样？。。如此一来
，要么是眼睛欺骗了我们，要么是现有的理论有缺陷。&lt;/p&gt;
&lt;p&gt;遵循第一条探索，假如是我们的眼睛欺骗了我们。就是作为观测者的人自身的因素导致的特定状况下的结论。这条路走下去就会得出“人择原理”：因为人在研究宇宙，
所以宇宙的一个重要性质就是允许人能存在，人的存在与物理常数有关。例如只要中子和质子的质量稍稍不同于现在的数值，就将有上百种原子核是不稳定的，也将导致
分子形成和演化的根基，也就不会有人存在。就如同你要问为什么宇宙年龄大于 100 亿年，根据人择原理，人是碳基生命，碳从恒星内部核反应产生，而恒星中的碳必须
经过超新星爆发才能弥散到宇宙空间，再来构成行星的原料，上述过程至少要 100 亿年，因此宇宙年龄必须在 100 亿年以上，否则不会有人存在，也就不会有人来提出
这个问题，哈哈，好唯心的说法啊，我不唯心，也不唯物，既是粒子又是波，简直就让人难以接受，我觉得唯相比较好，一切都是大脑中的一个印象（Image）。&lt;/p&gt;
&lt;p&gt;再回到“夜空是黑色的”问题上，可以存在许多有特定外在表现的宇宙 ----平行宇宙，可能在那些宇宙上夜空是红色的，黄色的，蓝色的，但是由于人的存在，
允许人类来观测和思考宇宙的话，某些平行宇宙就不应该存在（否则就不会有人存在），是人在观测宇宙，所以物理常数和宇宙学参数必须取合适的数值才能演化出人，
而在这些宇宙参数的取值下，呈现在人面前的宇宙夜空就是黑色的。&lt;/p&gt;
&lt;p&gt;遵循第二条探索，认为是现有理论不够完善。在解释大尺度空间的均匀性和宇宙结构方面没有足够深入，就如同黑洞，类星体，暗物质这些神秘的宇宙天体一样，夜空也可
以被看成一个天体，只是人类的观测能力有限，让这些在未来也许放在小学教科书里的内容在我们的时代却是未解之谜。我们这个时代一些重大的发现，量子宇宙学，
弦论，虚拟现实，人工智能，都是人类在反观自照：我们从何而来，我们要到哪里去，时间，空间，存在与虚无 永远在人类灵魂深处自觉不自觉的发问……&lt;/p&gt;
&lt;p&gt;夜空为什么是黑色的？……我们还是没有弄明白她，就像你永远走不进另一个人的内心，我们都是孤独的，正因为我们都是孤独的，所以我们都不孤独。
其实不是这个问题需要这么啰嗦，需要这么小题大作，它确认很简单，简单得人们都不屑去理会它，但几百年以来有很多睿智的科学家都思索过它，但都无果而终。
在如今的社会人们也有去追问这些问题的，只是对物质的强烈追求和追求到手之后内心无比的空虚和失落感，使得他们根本无法靠近这类问题散发出的效应场。&lt;br&gt;
思考这些问题是宇宙赋予人类的特权，夜空为什么是黑色的 --- 是宇宙在人类面前掀起的神秘面纱的一角，引领人类的特有的思维去认识空间、时间和存在……
夜空这位智者又在黑暗中偷偷笑了，也许是和人类它的孩子们玩的一个小游戏吧……就好像爷爷想逗逗他可爱的孙子出了一道算术题，看着孩子认真地做着题目，
他也会心一笑，然后捋捋胡须睡觉去了……&lt;/p&gt;</content:encoded></item></channel></rss>