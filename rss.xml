<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[WangXi's RSS Feed]]></title><description><![CDATA[Thinking in X]]></description><link>https://iwisunny.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Tue, 07 Apr 2020 07:29:00 GMT</lastBuildDate><item><title><![CDATA[How to report bug effectively]]></title><description><![CDATA[引言
为公众写过软件的人，大概都收到过很拙劣的 bug…]]></description><link>https://iwisunny.github.io/2020-04-07/how-to-report-bug-effectively</link><guid isPermaLink="false">https://iwisunny.github.io/2020-04-07/how-to-report-bug-effectively</guid><pubDate>Tue, 07 Apr 2020 15:06:46 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;引言
为公众写过软件的人，大概都收到过很拙劣的 bug（计算机程序代码中的错误或程序运行时的瑕疵——译者注）报告，例如：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;在报告中说“不好用”；&lt;/li&gt;
&lt;li&gt;所报告内容毫无意义；&lt;/li&gt;
&lt;li&gt;在报告中用户没有提供足够的信息；&lt;/li&gt;
&lt;li&gt;在报告中提供了错误信息；&lt;/li&gt;
&lt;li&gt;所报告的问题是由于用户的过失而产生的；&lt;/li&gt;
&lt;li&gt;所报告的问题是由于其他程序的错误而产生的；&lt;/li&gt;
&lt;li&gt;所报告的问题是由于网络错误而产生的；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这便是为什么“技术支持”被认为是一件可怕的工作，因为有拙劣的 bug 报告需要处理。然而并不是所有的 bug 报告都令人生厌：我在业余时间维护自由软件，有时我会收到非常清晰、有帮助并且“有内容”的 bug 报告。&lt;/p&gt;
&lt;p&gt;在这里我会尽力阐明如何写一个好的 bug 报告。我非常希望每一个人在报告 bug 之前都读一下这篇短文，当然我也希望用户在给我报告 bug 之前已经读过这篇文章。&lt;/p&gt;
&lt;p&gt;简单地说，报告 bug 的目的是为了让程序员看到程序的错误。您可以亲自示范，也可以给出能导致程序出错的、详尽的操作步骤。如果程序出错了，程序员会收集额外的信息直到找到错误的原因；如果程序没有出错，那么他们会请您继续关注这个问题，收集相关的信息。&lt;/p&gt;
&lt;p&gt;在 bug 报告里，要设法搞清什么是事实（例如：“我在电脑旁”和“XX 出现了”）什么是推测（例如：“我想问题可能是出在……”）。如果愿意的话，您可以省去推测，但是千万别省略事实。&lt;/p&gt;
&lt;p&gt;当您报告 bug 的时候（既然您已经这么做了），一定是希望 bug 得到及时修正。所以此时针对程序员的任何过激或亵渎的言语（甚至谩骂）都是与事无补的——因为这可能是程序员的错误，也有可能是您的错误，也许您有权对他们发火，但是如果您能多提供一些有用的信息（而不是激愤之词）或许 bug 会被更快的修正。除此以外，请记住：如果是免费软件，作者提供给我们已经是出于好心，所以要是太多的人对他们无礼，他们可能就要“收起”这份好心了。&lt;/p&gt;
&lt;h2&gt;“程序不好用”&lt;/h2&gt;
&lt;p&gt;程序员不是弱智：如果程序一点都不好用，他们不可能不知道。他们不知道一定是因为程序在他们看来工作得很正常。所以，或者是您作过一些与他们不同的操作，或者是您的环境与他们不同。他们需要信息，报告 bug 也是为了提供信息。信息总是越多越好。&lt;/p&gt;
&lt;p&gt;许多程序，特别是自由软件，会公布一个“已知 bug 列表”。如果您找到的 bug 在列表里已经有了，那就不必再报告了，但是如果您认为自己掌握的信息比列表中的丰富，那无论如何也要与程序员联系。您提供的信息可能会使他们更简单地修复 bug。&lt;/p&gt;
&lt;p&gt;本文中提到的都是一些指导方针，没有哪一条是必须恪守的准则。不同的程序员会喜欢不同形式的 bug 报告。如果程序附带了一套报告 bug 的准则，一定要读。如果它与本文中提到的规则相抵触，那么请以它为准。&lt;/p&gt;
&lt;p&gt;如果您不是报告 bug，而是寻求帮助，您应该说明您曾经到哪里找过答案，（例如：我看了第四章和第五章的第二节，但我找不到解决的办法。）这会使程序员了解用户喜欢到哪里去找答案，从而使程序员把帮助文档做得更容易使用。&lt;/p&gt;
&lt;h2&gt;“演示给我看”&lt;/h2&gt;
&lt;p&gt;报告 bug 的最好的方法之一是“演示”给程序员看。让程序员站在电脑前，运行他们的程序，指出程序的错误。让他们看着您启动电脑、运行程序、如何进行操作以及程序对您的输入有何反应。&lt;/p&gt;
&lt;p&gt;他们对自己写的软件了如指掌，他们知道哪些地方不会出问题，而哪些地方最可能出问题。他们本能地知道应该注意什么。在程序真的出错之前，他们可能已经注意到某些地方不对劲，这些都会给他们一些线索。他们会观察程序测试中的每一个细节，并且选出他们认为有用的信息。&lt;/p&gt;
&lt;p&gt;这些可能还不够。也许他们觉得还需要更多的信息，会请您重复刚才的操作。他们可能在这期间需要与您交流一下，以便在他们需要的时候让 bug 重新出现。他们可能会改变一些操作，看看这个错误的产生是个别问题还是相关的一类问题。如果您不走运，他们可能需要坐下来，拿出一堆开发工具，花上几个小时来好好地研究一下。但是最重要的是在程序出错的时候让程序员在电脑旁。一旦他们看到了问题，他们通常会找到原因并开始试着修改。&lt;/p&gt;
&lt;h2&gt;“告诉我该怎么做”&lt;/h2&gt;
&lt;p&gt;如今是网络时代，是信息交流的时代。我可以点一下鼠标把自己的程序送到俄罗斯的某个朋友那里，当然他也可以用同样简单的方法给我一些建议。但是如果我的程序出了什么问题，我不可能在他旁边。“演示”是很好的办法，但是常常做不到。&lt;/p&gt;
&lt;p&gt;如果您必须报告 bug，而此时程序员又不在您身边，那么您就要想办法让 bug 重现在他们面前。当他们亲眼看到错误时，就能够进行处理了。&lt;/p&gt;
&lt;p&gt;确切地告诉程序员您做了些什么。如果是一个图形界面程序，告诉他们您按了哪个按钮，依照什么顺序按的。如果是一个命令行程序，精确的告诉他们您键入了什么命令。您应该尽可能详细地提供您所键入的命令和程序的反应。&lt;/p&gt;
&lt;p&gt;把您能想到的所有的输入方式都告诉程序员，如果程序要读取一个文件，您可能需要发一个文件的拷贝给他们。如果程序需要通过网络与另一台电脑通讯，您或许不能把那台电脑复制过去，但至少可以说一下电脑的类型和安装了哪些软件（如果可以的话）。&lt;/p&gt;
&lt;h2&gt;“哪儿出错了？在我看来一切正常哦！”&lt;/h2&gt;
&lt;p&gt;如果您给了程序员一长串输入和指令，他们执行以后没有出现错误，那是因为您没有给他们足够的信息，可能错误不是在每台计算机上都出现，您的系统可能和他们的在某些地方不一样。有时候程序的行为可能和您预想的不一样，这也许是误会，但是您会认为程序出错了，程序员却认为这是对的。&lt;/p&gt;
&lt;p&gt;同样也要描述发生了什么。精确的描述您看到了什么。告诉他们为什么您觉得自己所看到的是错误的，最好再告诉他们，您认为自己应该看到什么。如果您只是说：“程序出错了”，那您很可能漏掉了非常重要的信息。&lt;/p&gt;
&lt;p&gt;如果您看到了错误消息，一定要仔细、准确的告诉程序员，这确实很重要。在这种情况下，程序员只要修正错误，而不用去找错误。他们需要知道是什么出问题了，系统所报的错误消息正好帮助了他们。如果您没有更好的方法记住这些消息，就把它们写下来。只报告“程序出了一个错”是毫无意义的，除非您把错误消息一块报上来。&lt;/p&gt;
&lt;p&gt;特殊情况下，如果有错误消息号，一定要把这些号码告诉程序员。不要以为您看不出任何意义，它就没有意义。错误消息号包含了能被程序员读懂的各种信息，并且很有可能包含重要的线索。给错误消息编号是因为用语言描述计算机错误常常令人费解。用这种方式告诉您错误的所在是一个最好的办法。&lt;/p&gt;
&lt;p&gt;在这种情形下，程序员的排错工作会十分高效。他们不知道发生了什么，也不可能到现场去观察，所以他们一直在搜寻有价值的线索。错误消息、错误消息号以及一些莫名其妙的延迟，都是很重要的线索，就像办案时的指纹一样重要，保存好。&lt;/p&gt;
&lt;p&gt;如果您使用 UNIX 系统，程序可能会产生一个内核输出（coredump）。内核输出是特别有用的线索来源，别扔了它们。另一方面，大多数程序员不喜欢收到含有大量内核输出文件的 EMAIL，所以在发邮件之前最好先问一下。还有一点要注意：内核输出文件记录了完整的程序状态，也就是说任何秘密（可能当时程序正在处理一些私人信息或秘密数据）都可能包含在内核输出文件里。&lt;/p&gt;
&lt;h2&gt;“出了问题之后，我做了……”&lt;/h2&gt;
&lt;p&gt;当一个错误或 bug 发生的时候，您可能会做许多事情。但是大多数人会使事情变的更糟。我的一个朋友在学校里误删了她所有的 Word 文件，在找人帮忙之前她重装了 Word，又运行了一遍碎片整理程序，这些操作对于恢复文件是毫无益处的，因为这些操作搞乱了磁盘的文件区块。恐怕在这个世界上没有一种反删除软件能恢复她的文件了。如果她不做任何操作，或许还有一线希望。&lt;/p&gt;
&lt;p&gt;这种用户仿佛一只被逼到墙角的鼬（黄鼠狼、紫貂一类的动物——译者注）：背靠墙壁，面对死亡的降临奋起反扑，疯狂攻击。他们认为做点什么总比什么都不做强。然而这些在处理计算机软件问题时并不适用。&lt;/p&gt;
&lt;p&gt;不要做鼬，做一只羚羊。当一只羚羊面对料想不到的情况或受到惊吓时，它会一动不动，是为了不吸引任何注意，与此同时也在思考解决问题的最好办法（如果羚羊有一条技术支持热线，此时占线。）。然后，一旦它找到了最安全的行动方案，它便去做。&lt;/p&gt;
&lt;p&gt;当程序出毛病的时候，立刻停止正在做的任何操作。不要按任何健。仔细地看一下屏幕，注意那些不正常的地方，记住它或者写下来。然后慎重地点击“确定” 或“取消”，选择一个最安全的。学着养成一种条件反射——一旦电脑出了问题，先不要动。要想摆脱这个问题，关掉受影响的程序或者重新启动计算机都不好，一个解决问题的好办法是让问题再次产生。程序员们喜欢可以被重现的问题，快乐的程序员可以更快而且更有效率的修复 bug。&lt;/p&gt;
&lt;h2&gt;“我想粒子的跃迁与错误的极化有关”&lt;/h2&gt;
&lt;p&gt;并不只是非专业的用户才会写出拙劣的 bug 报告，我见过一些非常差的 bug 报告出自程序员之手，有些还是非常优秀的程序员。&lt;/p&gt;
&lt;p&gt;有一次我与另一个程序员一起工作，他一直在找代码中的 bug，他常常遇到一个 bug，但是不会解决，于是就叫我帮忙。“出什么毛病了？”我问。而他的回答却总是一些关于 bug 的意见。如果他的观点正确，那的确是一件好事。这意味着他已经完成了工作的一半，并且我们可以一起完成另一半工作。这是有效率并有用的。&lt;/p&gt;
&lt;p&gt;但事实上他常常是错的。这就会使我们花上半个小时在原本正确的代码里来回寻找错误，而实际上问题出在别的地方。我敢肯定他不会对医生这么做。“大夫，我得了 Hydroyoyodyne（真是怪病——译者），给我开个方子”，人们知道不该对一位医生说这些。您描述一下症状，哪个地方不舒服，哪里疼、起皮疹、发烧……让医生诊断您得了什么病，应该怎样治疗。否则医生会把您当做疑心病或精神病患者打发了，这似乎没什么不对。&lt;/p&gt;
&lt;p&gt;做程序员也是一样。即便您自己的“诊断”有时真的有帮助，也要只说“症状”。“诊断”是可说可不说的，但是“症状”一定要说。同样，在 bug 报告里面附上一份针对 bug 而做出修改的源代码是有用处的，但它并不能替代 bug 报告本身。&lt;/p&gt;
&lt;p&gt;如果程序员向您询问额外的信息，千万别应付。曾经有一个人向我报告 bug，我让他试一个命令，我知道这个命令不好用，但我是要看看程序会返回一个什么错误（这是很重要的线索）。但是这位老兄根本就没试，他在回复中说“那肯定不好用”，于是我又花了好些时间才说服他试了一下那个命令。&lt;/p&gt;
&lt;p&gt;用户多动动脑筋对程序员的工作是有帮助的。即使您的推断是错误的，程序员也应该感谢您，至少您想去帮助他们，使他们的工作变的更简单。不过千万别忘了报告“症状”，否则只会使事情变得更糟。&lt;/p&gt;
&lt;h2&gt;“真是奇怪，刚才还不好用，怎么现在又好了？”&lt;/h2&gt;
&lt;p&gt;“间歇性错误”着实让程序员发愁。相比之下，进行一系列简单的操作便能导致错误发生的问题是简单的。程序员可以在一个便于观察的条件下重复那些操作，观察每一个细节。太多的问题在这种情况下不能解决，例如：程序每星期出一次错，或者偶然出一次错，或者在程序员面前从不出错（程序员一离开就出错。——译者）。当然还有就是程序的截止日期到了，那肯定要出错。&lt;/p&gt;
&lt;p&gt;大多数“间歇性错误”并不是真正的“间歇”。其中的大多数错误与某些地方是有联系的。有一些错误可能是内存泄漏产生的，有一些可能是别的程序在不恰当的时候修改某个重要文件造成的，还有一些可能发生在每一个小时的前半个小时中（我确实遇到过这种事情）。&lt;/p&gt;
&lt;p&gt;同样，如果您能使 bug 重现，而程序员不能，那很有可能是他们的计算机和您的计算机在某些地方是不同的，这种不同引起了问题。我曾写过一个程序，它的窗口可以蜷缩成一个小球呆在屏幕的左上角，它在别的计算机上只能在 800x600 的解析度工作，但是在我的机器上却可以在 1024x768 下工作。&lt;/p&gt;
&lt;p&gt;程序员想要了解任何与您发现的问题相关的事情。有可能的话您到另一台机器上试试，多试几次，两次，三次，看看问题是不是经常发生。如果问题出现在您进行了一系列操作之后，不是您想让它出现它就会出现，这就有可能是长时间的运行或处理大文件所导致的错误。程序崩溃的时候，您要尽可能的记住您都做了些什么，并且如果您看到任何图形,也别忘了提一下。您提供的任何事情都是有帮助的。即使只是概括性的描述（例如：当后台有 EMACS 运行时，程序常常出错），这虽然不能提供导致问题的直接线索，但是可能帮助程序员重现问题。&lt;/p&gt;
&lt;p&gt;最重要的是：程序员想要确定他们正在处理的是一个真正的“间歇性错误”呢，还是一个在另一类特定的计算机上才出现的错误。他们想知道有关您计算机的许多细节，以便了解您的机器与他们的有什么不同。有许多细节都依仗特定的程序，但是有一件东西您一定要提供——版本号。程序的版本、操作系统的版本以及与问题有关的程序的版本。&lt;/p&gt;
&lt;h2&gt;“我把磁盘装进了 Windows……”&lt;/h2&gt;
&lt;p&gt;表意清楚在一份 bug 报告里是最基本的要求。如果程序员不知道您说的是什么意思，那您就跟没说一样。我收到的 bug 报告来自世界各地，有许多是来自非英语国家，他们通常为自己的英文不好而表示歉意。总的来说，这些用户发来的 bug 报告通常是清晰而且有用的。几乎所有不清晰的 bug 报告都是来自母语是英语的人，他们总是以为只要自己随便说说，程序员就能明白。&lt;/p&gt;
&lt;p&gt;精确。如果做相同的事情有两种方法，请说明您用的是哪一种。例如：“我选择了‘载入’”，可能意味着“我用鼠标点击‘载入’”或“我按下了‘ALT+L’”，说清楚您用了哪种方法，有时候这也有关系。
详细。信息宁多毋少！如果您说了很多，程序员可以略去一部分，可是如果您说的太少，他们就不得不回过头再去问您一些问题。有一次我收到了一份 bug 报告只有一句话，每一次我问他更多事情时，他每次的回复都是一句话，于是我花了几个星期的时间才得到了有用的信息。
慎用代词。诸如“它”，“窗体”这些词，当它们指代不清晰的时候不要用。来看看这句话：“我运行了 FooApp，它弹出一个警告窗口，我试着关掉它，它就崩溃了。”这种表述并不清晰，用户究竟关掉了哪个窗口？是警告窗口还是整个 FooApp 程序？您可以这样说，“我运行 FooApp 程序时弹出一个警告窗口，我试着关闭警告窗口，FooApp 崩溃了。”这样虽然罗嗦点，但是很清晰不容易产生误解。
检查。重新读一遍您写的 bug 报告，您觉得它是否清晰？如果您列出了一系列能导致程序出错的操作，那么照着做一遍，看看您是不是漏写了一步。&lt;/p&gt;
&lt;h2&gt;小结：&lt;/h2&gt;
&lt;p&gt;bug 报告的首要目的是让程序员亲眼看到错误。如果您不能亲自做给他们看，给他们能使程序出错的详细的操作步骤。
如果首要目的不能达成，程序员不能看到程序出错。这就需要 bug 报告的第二个目的来描述程序的什么地方出毛病了。详细的描述每一件事情：您看到了什么，您想看到什么，把错误消息记下来，尤其是“错误消息号”。
当您的计算机做了什么您料想不到的事，不要动！在您平静下来之前什么都别做。不要做您认为不安全的事。
尽量试着自己“诊断”程序出错的原因（如果您认为自己可以的话）。即使做出了“诊断”，您仍然应该报告“症状”。
如果程序员需要，请准备好额外的信息。如果他们不需要，就不会问您要。他们不会故意为难自己。您手头上一定要有程序的版本号，它很可能是必需品。
表述清楚，确保您的意思不能被曲解。&lt;/p&gt;
&lt;p&gt;总的来说，最重要的是要做到精确。程序员喜欢精确。&lt;/p&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chiark.greenend.org.uk/~sgtatham/bugs-cn.html&quot;&gt;https://www.chiark.greenend.org.uk/~sgtatham/bugs-cn.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[npmrc常用配置]]></title><description><![CDATA[在平时的 web 开发中，常用的一些 npmrc 配置 在项目根目录创建 文件，加上如下内容]]></description><link>https://iwisunny.github.io/2020-04-07/note-about-npmrc</link><guid isPermaLink="false">https://iwisunny.github.io/2020-04-07/note-about-npmrc</guid><pubDate>Tue, 07 Apr 2020 10:06:46 GMT</pubDate><content:encoded>&lt;p&gt;在平时的 web 开发中，常用的一些 npmrc 配置&lt;/p&gt;
&lt;p&gt;在项目根目录创建 &lt;code class=&quot;language-text&quot;&gt;.npmrc&lt;/code&gt;文件，加上如下内容&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;// 切换到国内的npm源
&lt;span class=&quot;token assign-left variable&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;https://registry.npm.taobao.org

// 如果平时喜欢yarn，不想生成npm的package-lock
package-lock&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;false

// 切换node-sass的下载镜像
sass-binary-site&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;https://npm.taobao.org/mirrors/node-sass

// 添加私有仓库，便于安装私有部署的scope package
@scope:registry&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;http://172.16.0.60:xxxx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[django webpack hot reload]]></title><description><![CDATA[1. 设置后端环境 2. 设置 django 的 settings.py 3. 设置 webpack (开发环境) 4. django 模板 实际项目中的演示： django webpack热加载]]></description><link>https://iwisunny.github.io/2020-04-07/django-webpack-hot-reload</link><guid isPermaLink="false">https://iwisunny.github.io/2020-04-07/django-webpack-hot-reload</guid><pubDate>Tue, 07 Apr 2020 08:06:46 GMT</pubDate><content:encoded>&lt;h2&gt;1. 设置后端环境&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# init python virtrual env&lt;/span&gt;
pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; virtualenv
virtualenv venv
&lt;span class=&quot;token builtin class-name&quot;&gt;source&lt;/span&gt; ./venv/bin/activate

pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; django-webpack-loader&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2. 设置 django 的 settings.py&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;WEBPACK_LOADER &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;DEFAULT&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;CACHE&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; not DEBUG,
        &lt;span class=&quot;token string&quot;&gt;&apos;BUNDLE_DIR_NAME&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;dist/&apos;&lt;/span&gt;, &lt;span class=&quot;token comment&quot;&gt;# must end with slash&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;STATS_FILE&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; os.path.join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;BASE_DIR, &lt;span class=&quot;token string&quot;&gt;&apos;static/dist/webpack-stats.json&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;,
        &lt;span class=&quot;token string&quot;&gt;&apos;POLL_INTERVAL&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.1&lt;/span&gt;,
        &lt;span class=&quot;token string&quot;&gt;&apos;TIMEOUT&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; None,
        &lt;span class=&quot;token string&quot;&gt;&apos;IGNORE&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.+\.hot-update.js&apos;&lt;/span&gt;, &lt;span class=&quot;token string&quot;&gt;&apos;.+\.map&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;3. 设置 webpack (开发环境)&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;const path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; require&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;path&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
const webpackNotifier &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; require&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;webpack-notifier&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
const ManifestPlugin &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; require&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;webpack-manifest-plugin&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
const BundleTracker &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; require&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;webpack-bundle-tracker&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

const devServerPort &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; process.env.DEV_SERVER_PORT &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9000&lt;/span&gt;

module.exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  mode: &lt;span class=&quot;token string&quot;&gt;&apos;development&apos;&lt;/span&gt;,
  devtool: &lt;span class=&quot;token string&quot;&gt;&apos;cheap-module-eval-source-map&apos;&lt;/span&gt;,
  entry: &lt;span class=&quot;token string&quot;&gt;&apos;./src/index.js&apos;&lt;/span&gt;,
  output: &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    path: path.resolve&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__dirname, &lt;span class=&quot;token string&quot;&gt;&apos;static/dist&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;,
    filename: &lt;span class=&quot;token string&quot;&gt;&apos;[name].js&apos;&lt;/span&gt;,
    chunkFilename: &lt;span class=&quot;token string&quot;&gt;&apos;[name].chunk.js&apos;&lt;/span&gt;,

    // &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; you want hmr, point to webpack-dev-server path, not django static &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt;
    publicPath: &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;http://localhost:$&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;devServerPort&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;/static/dist/&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;,
  devServer: &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    contentBase: path.resolve&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__dirname, &lt;span class=&quot;token string&quot;&gt;&apos;static/dist&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;,
    compress: true,
    port: process.env.DEV_SERVER_PORT &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9000&lt;/span&gt;,
    headers: &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&apos;Access-Control-Allow-Origin&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;*&apos;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;,
    historyApiFallback: true,

    // HMR
    hotOnly: true,
    inline: true,
    clientLogLevel: &lt;span class=&quot;token string&quot;&gt;&apos;warn&apos;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;,
  plugins: &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    new ManifestPlugin&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      publicPath: &lt;span class=&quot;token string&quot;&gt;&apos;static/dist/&apos;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;,
    new BundleTracker&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      filename: &lt;span class=&quot;token string&quot;&gt;&apos;./static/dist/webpack-stats.json&apos;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;4. django 模板&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;{% load custom_tags %} {% load render_bundle from webpack_loader %}
&lt;span class=&quot;token doctype&quot;&gt;&amp;lt;!DOCTYPE html&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{ site.lang|default:&apos;zh-cn&apos; }}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;utf-8&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt;
      &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;viewport&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token attr-name&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;width=device-width, initial-scale=1, shrink-to-fit=no&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;

    {% block styles %} {% if is_prod %}
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;stylesheet&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{ &apos;styles.css&apos; | get_manifest_asset }}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
    {% endif %} {% endblock %}
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    {% block content %}
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;app&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    {% endblock %} {% block scripts %} {% if is_prod %}
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{ &apos;styles.js&apos; | get_manifest_asset }}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{ &apos;main.js&apos; | get_manifest_asset }}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    {% else %} {% render_bundle &apos;main&apos; %} {% endif %} {% endblock %}
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;实际项目中的演示：&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/django-webpack-hot-reload.jpg&quot; alt=&quot;django webpack热加载&quot;&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Mac 10.15 安装 libvips]]></title><description><![CDATA[gatsby 的图片处理库很方便，但是 sharp 依赖 c++编写的 。
当 Mac 升级到 catalina(10.15), 安装时一直失败，当尝试源码编译，会出现依赖的错误。
还有在 catalina…]]></description><link>https://iwisunny.github.io/2020-04-06/mac-catalina-install-libvips</link><guid isPermaLink="false">https://iwisunny.github.io/2020-04-06/mac-catalina-install-libvips</guid><pubDate>Mon, 06 Apr 2020 08:06:46 GMT</pubDate><content:encoded>&lt;p&gt;gatsby 的图片处理库&lt;code class=&quot;language-text&quot;&gt;sharp&lt;/code&gt;很方便，但是 sharp 依赖 c++编写的 &lt;code class=&quot;language-text&quot;&gt;libvips&lt;/code&gt;。
当 Mac 升级到 catalina(10.15), &lt;code class=&quot;language-text&quot;&gt;brew&lt;/code&gt;安装时一直失败，当尝试源码编译，会出现&lt;code class=&quot;language-text&quot;&gt;tiff&lt;/code&gt;依赖的错误。
还有&lt;code class=&quot;language-text&quot;&gt;zlib&lt;/code&gt;在 catalina 默认的 &lt;code class=&quot;language-text&quot;&gt;pkg-config&lt;/code&gt;的配置&lt;code class=&quot;language-text&quot;&gt;zlib.pc&lt;/code&gt;错误。针对我遇到的情形，解决方式如下。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;// 从github 下载最新的gz包，vips-8.9.1.tar.gz

tar xf vips-8.9.1.tar.gz
cd vips-8.9.1

./configuration --with-jpeg --with-png --without-tiff

make

sudo make install

rm -rf node_modules

npm i --unsafe-perm --build-from-source --verbose&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;改进之处&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 markdown 内引入 png 图片，gatsby 有时会编译出错 (可能是 libvips 编译的参数不对， 或者&lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-sharp&lt;/code&gt;的 bug)&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;brew info vips&lt;/code&gt; 显示的 vips 版本始终是 8.8.x，尝试升级 brew，拉取&lt;code class=&quot;language-text&quot;&gt;brew/versions&lt;/code&gt;仓库也报错，可能是&lt;code class=&quot;language-text&quot;&gt;brew/core&lt;/code&gt;的 bug&lt;/li&gt;
&lt;li&gt;等 brew 官方发新版，最简单的就是通过&lt;code class=&quot;language-text&quot;&gt;brew install vips&lt;/code&gt;安装 libvips&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考文档&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sharp.pixelplumbing.com/install&quot;&gt;https://sharp.pixelplumbing.com/install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://libvips.github.io/libvips/install.html#building-libvips-from-a-source-tarball&quot;&gt;https://libvips.github.io/libvips/install.html#building-libvips-from-a-source-tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/21032&quot;&gt;https://github.com/gatsbyjs/gatsby/issues/21032&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[google搜索算子]]></title><description><![CDATA[allinanchor: If you start your query with allinanchor:, Google restricts results to pages containing all query terms you specify in the…]]></description><link>https://iwisunny.github.io/2019-10-26-google-advanced-operators</link><guid isPermaLink="false">https://iwisunny.github.io/2019-10-26-google-advanced-operators</guid><pubDate>Sat, 26 Oct 2019 00:12:03 GMT</pubDate><content:encoded>&lt;h2&gt;allinanchor:&lt;/h2&gt;
&lt;p&gt;If you start your query with allinanchor:, Google restricts results to pages containing all query terms you specify in the anchor text on links to the page. For example, [ allinanchor: best museums sydney ] will return only pages in which the anchor text on links to the pages contain the words “best,” “museums,” and “sydney.”&lt;/p&gt;
&lt;p&gt;Anchor text is the text on a page that is linked to another web page or a different place on the current page. When you click on anchor text, you will be taken to the page or place on the page to which it is linked. When using allinanchor: in your query, do not include any other search operators. The functionality of allinanchor: is also available through the Advanced Web Search page, under Occurrences.&lt;/p&gt;
&lt;h2&gt;allintext:&lt;/h2&gt;
&lt;p&gt;If you start your query with allintext:, Google restricts results to those containing all the query terms you specify in the text of the page. For example, [ allintext: travel packing list ] will return only pages in which the words “travel,” “packing,” and “list” appear in the text of the page. This functionality can also be obtained through the Advanced Web Search page, under Occurrences.&lt;/p&gt;
&lt;h2&gt;allintitle:&lt;/h2&gt;
&lt;p&gt;If you start your query with allintitle:, Google restricts results to those containing all the query terms you specify in the title. For example, [ allintitle: detect plagiarism ] will return only documents that contain the words “detect” and “plagiarism” in the title. This functionality can also be obtained through the Advanced Web Search page, under Occurrences.&lt;/p&gt;
&lt;p&gt;The title of a webpage is usually displayed at the top of the browser window and in the first line of Google’s search results for a page. The author of a website specifies the title of a page with the HTML TITLE element. There’s only one title in a webpage. When using allintitle: in your query, do not include any other search operators. The functionality of allintitle: is also available through the Advanced Web Search page, under Occurrences.&lt;/p&gt;
&lt;p&gt;In Image Search, the operator allintitle: will return images in files whose names contain the terms that you specify.&lt;/p&gt;
&lt;p&gt;In Google News, the operator allintitle: will return articles whose titles include the terms you specify.&lt;/p&gt;
&lt;h2&gt;allinurl:&lt;/h2&gt;
&lt;p&gt;If you start your query with allinurl:, Google restricts results to those containing all the query terms you specify in the URL. For example, [ allinurl: google faq ] will return only documents that contain the words “google” and “faq” in the URL, such as “www.google.com/help/faq.html”. This functionality can also be obtained through the Advanced Web Search page, under Occurrences.&lt;/p&gt;
&lt;p&gt;In URLs, words are often run together. They need not be run together when you’re using allinurl:.&lt;/p&gt;
&lt;p&gt;In Google News, the operator allinurl: will return articles whose titles include the terms you specify.&lt;/p&gt;
&lt;p&gt;The Uniform Resource Locator, more commonly known as URL, is the address that specifies the location of a file on the Internet. When using allinurl: in your query, do not include any other search operators. The functionality of allinurl: is also available through the Advanced Web Search page, under Occurrences.&lt;/p&gt;
&lt;h2&gt;author:&lt;/h2&gt;
&lt;p&gt;If you include author: in your query, Google will restrict your Google Groups results to include newsgroup articles by the author you specify. The author can be a full or partial name or email address. For example, [ children author:john author:doe ] or [ children author:doe@someaddress.com ] return articles that contain the word “children” written by John Doe or doe@someaddress.com.&lt;/p&gt;
&lt;p&gt;Google will search for exactly what you specify. If your query contains [ author:”John Doe” ] (with quotes), Google won’t find articles where the author is specified as “Doe, John.”&lt;/p&gt;
&lt;h2&gt;cache:&lt;/h2&gt;
&lt;p&gt;The query cache:url will display Google’s cached version of a web page, instead of the current version of the page. For example, [ cache:www.eff.org ] will show Google’s cached version of the Electronic Frontier Foundation home page.&lt;/p&gt;
&lt;p&gt;Note: Do not put a space between cache: and the URL (web address).&lt;/p&gt;
&lt;p&gt;On the cached version of a page, Google will highlight terms in your query that appear after the cache: search operator. For example, [ cache:www.pandemonia.com/flying/ fly diary ] will show Google’s cached version of Flight Diary in which Hamish Reid’s documents what’s involved in learning how to fly with the terms “fly” and “diary” highlighted.&lt;/p&gt;
&lt;h2&gt;define:&lt;/h2&gt;
&lt;p&gt;If you start your query with define:, Google shows definitions from pages on the web for the term that follows. This advanced search operator is useful for finding definitions of words, phrases, and acronyms. For example, [ define: blog ] will show definitions for “Blog” (weB LOG).&lt;/p&gt;
&lt;h2&gt;ext:&lt;/h2&gt;
&lt;p&gt;This is an undocumented alias for filetype:.&lt;/p&gt;
&lt;h2&gt;filetype:&lt;/h2&gt;
&lt;p&gt;If you include filetype:suffix in your query, Google will restrict the results to pages whose names end in suffix. For example, [ web page evaluation checklist filetype:pdf ] will return Adobe Acrobat pdf files that match the terms “web,” “page,” “evaluation,” and “checklist.” You can restrict the results to pages whose names end with pdf and doc by using the OR operator, e.g. [ email security filetype:pdf OR filetype:doc ].&lt;/p&gt;
&lt;p&gt;When you don’t specify a File Format in the Advanced Search Form or the filetype: operator, Google searches a variety of file formats; see the table in File Type Conversion.&lt;/p&gt;
&lt;h2&gt;group:&lt;/h2&gt;
&lt;p&gt;If you include group: in your query, Google will restrict your Google Groups results to newsgroup articles from certain groups or subareas. For example, [ sleep group:misc.kids.moderated ] will return articles in the group misc.kids.moderated that contain the word “sleep” and [ sleep group:misc.kids ] will return articles in the subarea misc.kids that contain the word “sleep.”&lt;/p&gt;
&lt;h2&gt;id:&lt;/h2&gt;
&lt;p&gt;This is an undocumented alias for info:.&lt;/p&gt;
&lt;h2&gt;inanchor:&lt;/h2&gt;
&lt;p&gt;If you include inanchor: in your query, Google will restrict the results to pages containing the query terms you specify in the anchor text or links to the page. For example, [ restaurants inanchor:gourmet ] will return pages in which the anchor text on links to the pages contain the word “gourmet” and the page contains the word “restaurants.”&lt;/p&gt;
&lt;h2&gt;info:&lt;/h2&gt;
&lt;p&gt;The query info:URL will present some information about the corresponding web page. For instance, [ info:gothotel.com ] will show information about the national hotel directory GotHotel.com home page.&lt;/p&gt;
&lt;p&gt;Note: There must be no space between the info: and the web page URL.&lt;/p&gt;
&lt;p&gt;This functionality can also be obtained by typing the web page URL directly into a Google search box.&lt;/p&gt;
&lt;h2&gt;insubject:&lt;/h2&gt;
&lt;p&gt;If you include insubject: in your query, Google will restrict articles in Google Groups to those that contain the terms you specify in the subject. For example, [ insubject:”falling asleep” ] will return Google Group articles that contain the phrase “falling asleep” in the subject.&lt;/p&gt;
&lt;p&gt;Equivalent to intitle:.&lt;/p&gt;
&lt;h2&gt;intext:&lt;/h2&gt;
&lt;p&gt;The query intext:term restricts results to documents containing term in the text. For instance, [ Hamish Reid intext:pandemonia ] will return documents that mention the word “pandemonia” in the text, and mention the names “Hamish” and “Reid” anywhere in the document (text or not).&lt;/p&gt;
&lt;p&gt;Note: There must be no space between the intext: and the following word.&lt;/p&gt;
&lt;p&gt;Putting intext: in front of every word in your query is equivalent to putting allintext: at the front of your query, e.g., [ intext:handsome intext:poets ] is the same as [ allintext: handsome poets ].&lt;/p&gt;
&lt;h2&gt;intitle:&lt;/h2&gt;
&lt;p&gt;The query intitle:term restricts results to documents containing term in the title. For instance, [ flu shot intitle:help ] will return documents that mention the word “help” in their titles, and mention the words “flu” and “shot” anywhere in the document (title or not).&lt;/p&gt;
&lt;p&gt;Note: There must be no space between the intitle: and the following word.&lt;/p&gt;
&lt;p&gt;Putting intitle: in front of every word in your query is equivalent to putting allintitle: at the front of your query, e.g., [ intitle:google intitle:search ] is the same as [ allintitle: google search ].&lt;/p&gt;
&lt;h2&gt;inurl:&lt;/h2&gt;
&lt;p&gt;If you include inurl: in your query, Google will restrict the results to documents containing that word in the URL. For instance, [ inurl:print site:www.googleguide.com ] searches for pages on Google Guide in which the URL contains the word “print.” It finds pdf files that are in the directory or folder named “print” on the Google Guide website. The query [ inurl:healthy eating ] will return documents that mention the words “healthy” in their URL, and mention the word “eating” anywhere in the document.&lt;/p&gt;
&lt;p&gt;Note: There must be no space between the inurl: and the following word.&lt;/p&gt;
&lt;p&gt;Putting inurl: in front of every word in your query is equivalent to putting allinurl: at the front of your query, e.g., [ inurl:healthy inurl:eating ] is the same as [ allinurl: healthy eating ].&lt;/p&gt;
&lt;p&gt;In URLs, words are often run together. They need not be run together when you’re using inurl:.&lt;/p&gt;
&lt;h2&gt;link:&lt;/h2&gt;
&lt;p&gt;The query link:URL shows pages that point to that URL. For example, to find pages that point to Google Guide’s home page, enter:&lt;/p&gt;
&lt;p&gt;[ link:www.googleguide.com ]&lt;/p&gt;
&lt;p&gt;Note: According to Google’s documentation, “you cannot combine a link: search with a regular keyword search.”&lt;/p&gt;
&lt;p&gt;Also note that when you combine link: with another advanced operator, Google may not return all the pages that match. The following queries should return lots of results, as you can see if you remove the -site: term in each of these queries.&lt;/p&gt;
&lt;p&gt;Find links to the Google home page not on Google’s own site.&lt;/p&gt;
&lt;p&gt;[ link:www.google.com -site:google.com ]&lt;/p&gt;
&lt;p&gt;Find links to the UK Owners Direct home page not on its own site.&lt;/p&gt;
&lt;p&gt;[ link:www.www.ownersdirect.co.uk -site:ownersdirect.co.uk ]&lt;/p&gt;
&lt;h2&gt;location:&lt;/h2&gt;
&lt;p&gt;If you include location: in your query on Google News, only articles from the location you specify will be returned. For example, [ queen location:canada ] will show articles that match the term “queen” from sites in Canada. Many other country names work; try them and see.&lt;/p&gt;
&lt;p&gt;Two-letter US state abbreviations match individual US states, and two-letter Canadian province abbreviations (like NS for Nova Scotia) also work — although some provinces don’t have many newspapers online, so you may not get many results. Some other two-letter abbreviations — such as UK for the United Kingdom — are also available.&lt;/p&gt;
&lt;h2&gt;movie:&lt;/h2&gt;
&lt;p&gt;If you include movie: in your query, Google will find movie-related information. For examples, see Google’s Blog.&lt;/p&gt;
&lt;h2&gt;related:&lt;/h2&gt;
&lt;p&gt;The query related:URL will list web pages that are similar to the web page you specify. For instance, [ related:www.consumerreports.org ] will list web pages that are similar to the Consumer Reports home page.&lt;/p&gt;
&lt;p&gt;Note: Don’t include a space between the related: and the web page url.&lt;/p&gt;
&lt;p&gt;You can also find similar pages from the “Similar pages” link on Google’s main results page, and from the similar selector in the Page-Specific Search area of the Advanced Search page. If you expect to search frequently for similar pages, consider installing a GoogleScout browser button, which scouts for similar pages.&lt;/p&gt;
&lt;h2&gt;site:&lt;/h2&gt;
&lt;p&gt;If you include site: in your query, Google will restrict your search results to the site or domain you specify. For example, [ admissions site:www.lse.ac.uk ] will show admissions information from London School of Economics’ site and [ peace site:gov ] will find pages about peace within the .gov domain. You can specify a domain with or without a period, e.g., either as .gov or gov.&lt;/p&gt;
&lt;p&gt;Note: Do not include a space between the “site:” and the domain.&lt;/p&gt;
&lt;p&gt;You can use many of the search operators in conjunction with the basic search operators +, –, OR, and &quot; &quot;. For example, to find information on Windows security from all sites except microsoft.com, enter:&lt;/p&gt;
&lt;p&gt;[ windows security –site:microsoft.com ]&lt;/p&gt;
&lt;p&gt;You can also restrict your results to a site or domain through the domains selector on the Advanced Search page.&lt;/p&gt;
&lt;h2&gt;source:&lt;/h2&gt;
&lt;p&gt;If you include source: in your query, Google News will restrict your search to articles from the news source with the ID you specify. For example, [ election source:new&lt;em&gt;york&lt;/em&gt;times ] will return articles with the word “election” that appear in the New York Times.&lt;/p&gt;
&lt;p&gt;To find a news source ID, enter a query that includes a term and the name of the publication you’re seeking. You can also specify the publication name in the “news source” field in the Advanced News Search form. You’ll find the news source ID in the query box, following the source: search operator. For example, let’s say you enter the publication name Ha’aretz in the News Source box, then you click the Google Search button. The results page appears, and its search box contains [ peace source:ha&lt;em&gt;aretz__subscription&lt;/em&gt; ]. This means that the news source ID is ha&lt;em&gt;aretz__subscription&lt;/em&gt;. This query will only return articles that include the word “peace” from the Israeli newspaper Ha’aretz.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[From jekyll to gatsby]]></title><description><![CDATA[While hosting personal site on github pages, jekyll is fine.
But nowadays static site generator like  is more popular which
is based on the…]]></description><link>https://iwisunny.github.io/2019-08-31-from-jekyll-to-gatsby</link><guid isPermaLink="false">https://iwisunny.github.io/2019-08-31-from-jekyll-to-gatsby</guid><pubDate>Sat, 31 Aug 2019 22:12:03 GMT</pubDate><content:encoded>&lt;p&gt;While hosting personal site on github pages, jekyll is fine.
But nowadays static site generator like &lt;code class=&quot;language-text&quot;&gt;GatsbyJs&lt;/code&gt; is more popular which
is based on the fantastic &lt;code class=&quot;language-text&quot;&gt;React&lt;/code&gt;, also my favorite language is &lt;code class=&quot;language-text&quot;&gt;javascript&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So shifting from jekyll to gatsby seems a win-win step.&lt;/p&gt;
&lt;p&gt;Happy blogging :-)&lt;/p&gt;
&lt;h4&gt;Reference&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.org/&quot;&gt;GatsbyJs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jarednielsen.com/deploy-gatsbyjs-github-pages-user/&quot;&gt;How to Deploy a GatsbyJS Blog on GitHub Pages as a User Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[life is a state of mind]]></title><description><![CDATA[The subject of this article you are about to read reveals a crucial secret of your life.
It concerns a subject that is liable to make…]]></description><link>https://iwisunny.github.io/2015-10-25-life-is-a-state-of-mind</link><guid isPermaLink="false">https://iwisunny.github.io/2015-10-25-life-is-a-state-of-mind</guid><pubDate>Sun, 25 Oct 2015 00:12:03 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;The subject of this article you are about to read reveals a crucial secret of your life.
It concerns a subject that is liable to make fundamental changes in your outlook on the material world.
The content of this article is not just a different approach, or a philosophical thought.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一个人从出生就受到条件的制约，因为人居住的环境完全是物质性的。人在这种外界条件的影响下逐渐长大，所有的想法
都是在物质世界的基础上形成。我们从外界获得的所有信息来源于我们的 5 种感官(Sensors)，视觉、听觉、嗅觉、味觉、触觉
形成了我们的世界。人从出生就依赖这五种感官，这是我们感知世界的唯一途径。当超越感官，在思维模型上考察
一个和以往认识完全不同的世界，这个世界是真是假，who knows and who cares ?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;人是一个映像(Image)，经历的每一件事都是一个短暂的感觉，宇宙是一个影子(Shadow)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;眼睛是如何看到这个世界的？&lt;/h3&gt;
&lt;p&gt;眼睛看见一个事物是一个逐步的过程，首先光线的光量子从物体射向我们的眼睛，穿过眼角膜，最后在眼睛后面的视网膜聚集。
光信号转化成电信号，从视神经元传到大脑后部，最终在大脑后部这个几立方厘米的区域形成图像。我们一生中看到的所有事物，
经历的所有事情都在这个狭小黑暗的区域形成图像。“相由心生”从这个意义上讲佛学和科学是汇合的。当我们说我们看到了东西，
其实是电信号传送到了大脑后沿的成像区域，也就是大脑接收到了特定的电信号，而大脑是完全隔离光线的，大脑不可能和光线发生
联系，换句话说光线永远照不到大脑内，大脑只是处理外界光线产生的电信号就形成了我们看到的五彩缤纷的世界。&lt;/p&gt;
&lt;p&gt;与视觉类似，其它感官的形成也同样是外界的刺激给大脑反馈的电信号。在我们的一生中，从大脑中起源的一切并不是真实的外界，
而只是大脑复制的映像，我们误认为大脑中的映像是外界存在的实际物质。&lt;/p&gt;
&lt;h3&gt;大脑中的外部世界&lt;/h3&gt;
&lt;p&gt;上面的分析指出了一个不可否认的推论，我们在世界或者说宇宙中，看到、摸到、听到，从而觉得是物质的东西，其实只是大脑中的
电信号。如果外部物质反射的光线被阻断或者光线刺激大脑的电信号被阻断，我们就看不到外部的物质了，显然，我们看见的世界只是
大脑对电信号的解读。天文望远镜里看到的宇宙星空，不是说那些物体有几百万光年远，其实就在我们的大脑中。当你坐在屋子里看电视，
你的感觉和身体让你觉得自己在屋子里，其实是屋子和你的身体在你的大脑里，只是你大脑里的一个映像。现在回到我们前面一直提到的
“外界”这个词，其实外界是我们大脑中的外界，我们根本无法跳出大脑里的世界，既然我们不能到达外面真实的世界，我们又凭什么
确定外界真实存在？？显然，我们无法确定外界是否存在。我们居住的世界只是大脑里感觉的世界，（a state of our minds）。可以做一个小小的
思维实验，假设把大脑和身体分离，大脑分离出来继续维持生理机能，在大脑外面连接一个能记录信息的电脑（或者示波器），将电脑记录的数据全部
转换为电子脉冲刻录到光盘，然后反过来将光盘记录的信息用电脑读出转换成电信号再输入给大脑，你想大脑里会发生什么？
大脑会读出这些电信号，产生前面看到的，听到的，摸到的等等物体的感觉，过去就被重现了。只要电脑不停地给大脑施加电刺激，这个大脑中虚幻的世界
就一直持续。我们只是意识（life is a state of minds）,我们很容易被感觉欺骗，认为有一些真实存在的东西，比如梦里的东西？。。&lt;/p&gt;
&lt;h3&gt;梦里的世界&lt;/h3&gt;
&lt;p&gt;在我们平常的世界，我们能有看到，听到，摸到物体的感觉，在梦里我们也有和真实世界一样的感觉，但是梦里，我们没有手，也没有眼睛，我们怎么来的这种感觉，
梦里也没有任何可以让我们摸和看的“真实”的物体，认为我们在梦中感到的东西是真实的，本身就是一种错觉。一个人在床上沉睡，梦中自己在一个不同的世界，
也许在梦中的世界他在上天入地，做着非同寻常的事情，但事实上他就在床上一步也没有离开。如果我们能在梦中平安的生活着，
只有在梦醒的时候，我们才会意识到是做了一场梦，同样的道理也适用于我们正生活的这个被我们认为真实存在的世界。当我们从一场梦中醒来，没有理由不相信我们
仍然处在另一个更长的梦中，这都是大脑给我们营造的梦境，这个更长的梦我们叫它真实的世界。我们之所以认为梦是幻境，现在的世界是真的，只是我们的惯性思维。
我们在地球上的生活可能不是清醒的，我们认为现在是在实际生活着，认为似乎刚刚从梦中醒来。&lt;/p&gt;
&lt;h3&gt;谁是自我&lt;/h3&gt;
&lt;p&gt;所有的事实和分析都指向一个更重要的问题，如果我们生活的所有情形都只是固有的感知，那我们的大脑是什么？我们的意识是什么？如果意识是由物质组成，就像我们的身体
是由物质组成一样，那意识本身也只是一个被感知的对象，就像外界的物体一样。如果意识只是感觉，是由视觉和触觉等感官创造的，那么到底是什么接收到了这些感觉？
是谁看到了，谁触摸到了，闻到了，感觉到了。。？是谁在思考，推断，和感觉到“我是我”？我们这个年代一些重要领域的思考也最终指向了这个问题。
The ghost in the machine, the small man in the small man ，“我”在哪里？谁在用我的“意识”？谁意识到了“意识”本身？我们在寻找谁看见了这一切。
实际上， 形而上存在一个东西能够看到听到，那就是灵魂(Soul)，我们所认为的现实世界，是灵魂看见听见的集合。就像梦中我们的身体和感知的世界不是真实存在的一样，
我们身处的宇宙也不是真实存在的，也不是物理的实在，唯一真实存在的，是灵魂。事物只是灵魂的感知，物理，化学和生物的法则都指向一个结论---人的存在是幻觉。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[夜空为什么是黑色的?]]></title><description><![CDATA[…]]></description><link>https://iwisunny.github.io/2015-04-09-why-the-night-sky-is-dark</link><guid isPermaLink="false">https://iwisunny.github.io/2015-04-09-why-the-night-sky-is-dark</guid><pubDate>Thu, 09 Apr 2015 00:12:03 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;夜空总给我一种神秘的感觉，似乎要告诉我什么，像一位睿智的老者、默默的友人……
当你仰望它时内心有莫名的平静……
宇宙中的问题没有简单与复杂的区分，简单与复杂这些形容词，都掺杂了人的主观情感……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个生活中司空见惯的现象却蕴涵着深刻的道理(&lt;code class=&quot;language-text&quot;&gt;关于奥伯斯佯谬&lt;/code&gt;)。不动脑子的解释就是：夜晚地球的一面背对着太阳，因为没有阳光照射，所以是黑色的。&lt;/p&gt;
&lt;p&gt;其实回答的人连问题都没有理解清楚就开始抢答了，我问的是夜空为什么是黑色的，记住是“夜空”，是那片星空，而不是你下意识说出的地球表面。
也许你要反驳了，地球将太阳光挡住了一部分，而挡住的那部分视线上的夜空因为没有太阳光照射而呈现黑色。好了，反驳也很简单，考虑一下太阳和地球的体积，
一个太阳大概能装下 160 万个地球，由于太阳和地球距离很远（一个天文单位），所以太阳的视直径很小，你依然觉得地球挡住了很大一部分太阳光？。&lt;/p&gt;
&lt;p&gt;用一下隔离法吧，假设你将太阳这个宇宙中的小不点从宇宙天幕上移开了，再来对自己提问（假设你还在地球上活着）--- 为什么夜空是黑色的？&lt;/p&gt;
&lt;p&gt;到这里故事似乎变的有点趣味了，有人解释了，夜空之所以是黑色的是因为那里没有星星（恒星）。这样的回答无法令人满意，宇宙中存在无限多个近均匀分布的恒星，
我们的视线无论从哪个方向看去都能碰到恒星，类似各向同性的 3K 宇宙微波背景辐射，因而夜空应该到处是明亮的呀。还有人解释说星际空间存在大量的气体和尘埃，
遥远的星光被尘埃吸收导致光度减弱，因而夜空是黑色的。嗯，这么解释稍微有点靠谱，但是仔细想想也是行不通的，因为宇宙中恒星的总光度是趋于无限大的，
星际物质吸收那么多能量必然自身也会变热而发光……这些看似有道理的解释却都得出了与事实不相符的结论。&lt;/p&gt;
&lt;p&gt;宇宙的基本要素是时间和空间，有时当你闭上双眼，是否会小声猜测这无法形容的黑暗是否就是宇宙诞生之初的场景，于是人类的思维就逆向追寻时间和空间的脚步，
而宇宙大爆炸理论就是这种思维下的产物。难道“夜空为什么是黑色的”也与大爆炸扯上了联系？细细想来不是扯上了联系而是自然而然的联系……&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1915 年，斯里弗发现大多数河外星系的光谱线都偏向正常位置向红色端移动，这就是“光谱红移”现象。
根据多普勒效应，光谱红移告诉我们大多数河外星系在远离我们而去。
1926 年，哈勃进一步研究了 30 个河外星系的红移得出了哈勃定律：V=H*D 星系正在离开我们向四面八方远去，星系的距离与红移量的大小成正比。&lt;br&gt;
那些 100 亿光年远的类星体，远离我们的速度甚至达到了 0.8 倍光速。&lt;br&gt;
红移的大小表征了河外星系远离我们的退行速度。哈勃定律说明星系越远它们的退行速度越高，也就是说我们观测的宇宙正在膨胀！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有了上述的两个重要观测再来分析夜空是黑色的本质，由于我们观测的宇宙在膨胀，那么恒星发出的光会因为红移（光谱线向红色端移动）而使能量减弱，
星系越远红移越大，导致光线能量越低光度越暗。一些遥远的星系发出的光到达观测者的眼睛时能量已经衰减为零，所以我们观测到的夜空是黑色的。&lt;/p&gt;
&lt;p&gt;这时候有人要欢呼了，好像这个问题已经解决了，不然！回顾我们的分析过程是在假设宇宙大爆炸成立的情况下作出的，有人会这么推理，因为夜空是黑色的这一现象
是不争的事实，而如今几乎所有理论都无法很好的解释这个问题，唯独大爆炸理论能比较圆满的解释它，那么我们是否能作出这种推论：大爆炸理论是正确的。&lt;/p&gt;
&lt;p&gt;答案显然不行，这不是天文学上的苛刻，这样解释就陷入了循环论证的逻辑怪圈中。正确的态度是：夜空黑暗现象是宇宙大爆炸留下的蛛丝马迹，或许大爆炸理论是正确的
，又或许还有另一个更加正确的理论未被人类发现。就好像在解释大尺度空间的引力问题上，相对论是比牛顿力学更正确的理论，但你依然无法说明相对论就是正确的，
虽然水星近日点反常进动和强引力场光线弯曲等等现象佐证了相对论的引力理论，同样 3K 微波背景辐射等现象也佐证了大爆炸理论，但是要推翻一个论断，只需要一个反例
就够了。于是很多论断就成了既无法被证明正确，也无法被证明错误，游离在三界之外，成了一连串的哥德尔命题，而哥德尔命题又让人联想起了埃舍尔在房间画的那些奇
特的图画，那些图画又让人听到了巴赫那动人的管风琴曲，像朱自清闻到荷塘的花香，仿佛听到远处高楼上渺远的歌声。宇宙就这么悠然自得的演奏着自己气势恢宏的交响曲.&lt;/p&gt;
&lt;p&gt;当然，站在量子力学那诡异的视角里，“夜空为什么是黑色的”可以这样解析，我们的研究对象是夜空，外在表征是黑色，而人类奇怪于这种黑色与夜空之间的关联，
便有此一问“为什么？”。因为按照推断夜空不应该是黑色的啊，可以说成是亮白色的或者其他什么颜色的，---- 这又与我们观测的夜空是黑色的不一样？。。如此一来
，要么是眼睛欺骗了我们，要么是现有的理论有缺陷。&lt;/p&gt;
&lt;p&gt;遵循第一条探索，假如是我们的眼睛欺骗了我们。就是作为观测者的人自身的因素导致的特定状况下的结论。这条路走下去就会得出“人择原理”：因为人在研究宇宙，
所以宇宙的一个重要性质就是允许人能存在，人的存在与物理常数有关。例如只要中子和质子的质量稍稍不同于现在的数值，就将有上百种原子核是不稳定的，也将导致
分子形成和演化的根基，也就不会有人存在。就如同你要问为什么宇宙年龄大于 100 亿年，根据人择原理，人是碳基生命，碳从恒星内部核反应产生，而恒星中的碳必须
经过超新星爆发才能弥散到宇宙空间，再来构成行星的原料，上述过程至少要 100 亿年，因此宇宙年龄必须在 100 亿年以上，否则不会有人存在，也就不会有人来提出
这个问题，哈哈，好唯心的说法啊，我不唯心，也不唯物，既是粒子又是波，简直就让人难以接受，我觉得唯相比较好，一切都是大脑中的一个印象（Image）。&lt;/p&gt;
&lt;p&gt;再回到“夜空是黑色的”问题上，可以存在许多有特定外在表现的宇宙 ----平行宇宙，可能在那些宇宙上夜空是红色的，黄色的，蓝色的，但是由于人的存在，
允许人类来观测和思考宇宙的话，某些平行宇宙就不应该存在（否则就不会有人存在），是人在观测宇宙，所以物理常数和宇宙学参数必须取合适的数值才能演化出人，
而在这些宇宙参数的取值下，呈现在人面前的宇宙夜空就是黑色的。&lt;/p&gt;
&lt;p&gt;遵循第二条探索，认为是现有理论不够完善。在解释大尺度空间的均匀性和宇宙结构方面没有足够深入，就如同黑洞，类星体，暗物质这些神秘的宇宙天体一样，夜空也可
以被看成一个天体，只是人类的观测能力有限，让这些在未来也许放在小学教科书里的内容在我们的时代却是未解之谜。我们这个时代一些重大的发现，量子宇宙学，
弦论，虚拟现实，人工智能，都是人类在反观自照：我们从何而来，我们要到哪里去，时间，空间，存在与虚无 永远在人类灵魂深处自觉不自觉的发问……&lt;/p&gt;
&lt;p&gt;夜空为什么是黑色的？……我们还是没有弄明白她，就像你永远走不进另一个人的内心，我们都是孤独的，正因为我们都是孤独的，所以我们都不孤独。
其实不是这个问题需要这么啰嗦，需要这么小题大作，它确认很简单，简单得人们都不屑去理会它，但几百年以来有很多睿智的科学家都思索过它，但都无果而终。
在如今的社会人们也有去追问这些问题的，只是对物质的强烈追求和追求到手之后内心无比的空虚和失落感，使得他们根本无法靠近这类问题散发出的效应场。&lt;br&gt;
思考这些问题是宇宙赋予人类的特权，夜空为什么是黑色的 --- 是宇宙在人类面前掀起的神秘面纱的一角，引领人类的特有的思维去认识空间、时间和存在……
夜空这位智者又在黑暗中偷偷笑了，也许是和人类它的孩子们玩的一个小游戏吧……就好像爷爷想逗逗他可爱的孙子出了一道算术题，看着孩子认真地做着题目，
他也会心一笑，然后捋捋胡须睡觉去了……&lt;/p&gt;</content:encoded></item></channel></rss>