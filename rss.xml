<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[WangXi's RSS Feed]]></title><description><![CDATA[Thinking in X]]></description><link>https://iwisunny.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Wed, 06 May 2020 11:32:58 GMT</lastBuildDate><item><title><![CDATA[docker hyperkit进程cpu占用超过100%]]></title><description><![CDATA[解决方法很简单： 在 设置里，把cpu调成 1核。 这样  后续cpu占用不会超过100%]]></description><link>https://iwisunny.github.io/2020-05-06/docker-hyperkit-cpu-very-high</link><guid isPermaLink="false">https://iwisunny.github.io/2020-05-06/docker-hyperkit-cpu-very-high</guid><pubDate>Wed, 06 May 2020 19:26:46 GMT</pubDate><content:encoded>&lt;p&gt;解决方法很简单： 在&lt;code class=&quot;language-text&quot;&gt;docker desktop&lt;/code&gt; 设置里，把cpu调成 1核。&lt;/p&gt;
&lt;p&gt;这样 &lt;code class=&quot;language-text&quot;&gt;com.docker.hyperkit&lt;/code&gt; 后续cpu占用不会超过100%&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/docker-cpu.jpg&quot;&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Be a productive team member]]></title><description><![CDATA[天赋可以让你赢得比赛，但是团队合作与智慧可以让你赢得总冠军  -- michael jordan…]]></description><link>https://iwisunny.github.io/2020-04-08/be-a-productive-team-member</link><guid isPermaLink="false">https://iwisunny.github.io/2020-04-08/be-a-productive-team-member</guid><pubDate>Wed, 08 Apr 2020 11:11:46 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;天赋可以让你赢得比赛，但是团队合作与智慧可以让你赢得总冠军  -- michael jordan&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;了解实情&lt;/h2&gt;
&lt;p&gt;出色的团队合作者了解团队需要做什么以及为什么要这么做。他们知道自己的技能和品性对集体的努力有何助益。 简单地听命于人会让人迅速产生愤恨情绪并与团队格格不入。将自己当作团队一员时，您知道自己的位置和身处该位置的原因，也知道如何支持与改善他人的工作。&lt;/p&gt;
&lt;h2&gt;支持队友&lt;/h2&gt;
&lt;p&gt;当工作进展顺利时，应该首先考虑对队友的工作给予认可和鼓励。如果遇到困难，应在可以提供帮助的情况下向队友伸出援助之手。&lt;/p&gt;
&lt;h2&gt;提出建设性的批评&lt;/h2&gt;
&lt;p&gt;因为您了解集体目标，也明白您和队友如何才能为实现这些目标贡献自己的力量，所以在遇到障碍时，您可以提供建议和帮助。但是一定要小心。只有在感受到您的真诚，而且您提出的是建设性、有帮助并适合于实现共同目标的批评时，受到批评的人才会报以良好的反应。所以，您要真诚和诚恳地提出批评。真正擅长团队合作的人不会靠暗害同事来让自己“得分”。&lt;/p&gt;
&lt;h2&gt;处理冲突&lt;/h2&gt;
&lt;p&gt;在职场中，想要完全避免冲突几乎不可能。无论如何，人与人之间都会发生冲突，尤其是当你们都在紧张的时限或一定的压力下工作时。您要记住，好团队有一样重要的美德，那就是它能将各种技能和不同性格凝聚成合力。如果确实出现了意见分歧，擅长团队合作的人会将解决办法和想法拿到桌面上，并且能够接受批评，只要这些批评像他们提出的批评那样具有建设性。无论您处于职业生涯的哪个阶段，也不管您的抱负是什么，冲突管理都是一项真正重要的技能和核心领导能力。&lt;/p&gt;
&lt;h2&gt;清楚自己的界限&lt;/h2&gt;
&lt;p&gt;无论是处理冲突还是设法达到他人的期望，知道自己的限度和（引申开来）自己的界限在哪里才是自信的表现。致力于完成团队项目时，这种投入也要切合实际。过分投入或急于取悦他人都会导致压力、怨恨和耽误集体项目成功的障碍。知道何时应该说“不”或者如何与团队领导或同事谈判以便在合理的期限内顺利完成工作非常重要。&lt;/p&gt;
&lt;p&gt;想要变得擅长团队协作有时并不容易，需要经过时间和经验的磨炼。&lt;/p&gt;
&lt;p&gt;但是，坚持下去并保持本心，不改初衷，同时始终尊重别人，就一定能成为最终获胜团队的一员。  &lt;/p&gt;</content:encoded></item><item><title><![CDATA[npmrc常用配置]]></title><description><![CDATA[在平时的 web 开发中，常用的一些 npmrc 配置 在项目根目录创建 文件，加上如下内容]]></description><link>https://iwisunny.github.io/2020-04-07/note-about-npmrc</link><guid isPermaLink="false">https://iwisunny.github.io/2020-04-07/note-about-npmrc</guid><pubDate>Tue, 07 Apr 2020 10:06:46 GMT</pubDate><content:encoded>&lt;p&gt;在平时的 web 开发中，常用的一些 npmrc 配置&lt;/p&gt;
&lt;p&gt;在项目根目录创建 &lt;code class=&quot;language-text&quot;&gt;.npmrc&lt;/code&gt;文件，加上如下内容&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;// 切换到国内的npm源
&lt;span class=&quot;token assign-left variable&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;https://registry.npm.taobao.org

// 如果平时喜欢yarn，不想生成npm的package-lock
package-lock&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;false

// 切换node-sass的下载镜像
sass-binary-site&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;https://npm.taobao.org/mirrors/node-sass

// 添加私有仓库，便于安装私有部署的scope package
@scope:registry&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;http://172.16.0.60:xxxx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[django webpack hot reload]]></title><description><![CDATA[1. 设置后端环境 2. 设置 django 的 settings.py 3. 设置 webpack (开发环境) 4. django 模板 实际项目中的演示： django webpack热加载]]></description><link>https://iwisunny.github.io/2020-04-07/django-webpack-hot-reload</link><guid isPermaLink="false">https://iwisunny.github.io/2020-04-07/django-webpack-hot-reload</guid><pubDate>Tue, 07 Apr 2020 08:06:46 GMT</pubDate><content:encoded>&lt;h2&gt;1. 设置后端环境&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# init python virtrual env&lt;/span&gt;
pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; virtualenv
virtualenv venv
&lt;span class=&quot;token builtin class-name&quot;&gt;source&lt;/span&gt; ./venv/bin/activate

pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; django-webpack-loader&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2. 设置 django 的 settings.py&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;WEBPACK_LOADER &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;DEFAULT&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;CACHE&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; not DEBUG,
        &lt;span class=&quot;token string&quot;&gt;&apos;BUNDLE_DIR_NAME&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;dist/&apos;&lt;/span&gt;, &lt;span class=&quot;token comment&quot;&gt;# must end with slash&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;STATS_FILE&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; os.path.join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;BASE_DIR, &lt;span class=&quot;token string&quot;&gt;&apos;static/dist/webpack-stats.json&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;,
        &lt;span class=&quot;token string&quot;&gt;&apos;POLL_INTERVAL&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.1&lt;/span&gt;,
        &lt;span class=&quot;token string&quot;&gt;&apos;TIMEOUT&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; None,
        &lt;span class=&quot;token string&quot;&gt;&apos;IGNORE&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.+\.hot-update.js&apos;&lt;/span&gt;, &lt;span class=&quot;token string&quot;&gt;&apos;.+\.map&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;3. 设置 webpack (开发环境)&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;const path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; require&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;path&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
const webpackNotifier &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; require&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;webpack-notifier&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
const ManifestPlugin &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; require&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;webpack-manifest-plugin&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
const BundleTracker &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; require&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;webpack-bundle-tracker&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

const devServerPort &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; process.env.DEV_SERVER_PORT &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9000&lt;/span&gt;

module.exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  mode: &lt;span class=&quot;token string&quot;&gt;&apos;development&apos;&lt;/span&gt;,
  devtool: &lt;span class=&quot;token string&quot;&gt;&apos;cheap-module-eval-source-map&apos;&lt;/span&gt;,
  entry: &lt;span class=&quot;token string&quot;&gt;&apos;./src/index.js&apos;&lt;/span&gt;,
  output: &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    path: path.resolve&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__dirname, &lt;span class=&quot;token string&quot;&gt;&apos;static/dist&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;,
    filename: &lt;span class=&quot;token string&quot;&gt;&apos;[name].js&apos;&lt;/span&gt;,
    chunkFilename: &lt;span class=&quot;token string&quot;&gt;&apos;[name].chunk.js&apos;&lt;/span&gt;,

    // &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; you want hmr, point to webpack-dev-server path, not django static &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt;
    publicPath: &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;http://localhost:$&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;devServerPort&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;/static/dist/&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;,
  devServer: &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    contentBase: path.resolve&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__dirname, &lt;span class=&quot;token string&quot;&gt;&apos;static/dist&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;,
    compress: true,
    port: process.env.DEV_SERVER_PORT &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9000&lt;/span&gt;,
    headers: &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&apos;Access-Control-Allow-Origin&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;*&apos;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;,
    historyApiFallback: true,

    // HMR
    hotOnly: true,
    inline: true,
    clientLogLevel: &lt;span class=&quot;token string&quot;&gt;&apos;warn&apos;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;,
  plugins: &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    new ManifestPlugin&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      publicPath: &lt;span class=&quot;token string&quot;&gt;&apos;static/dist/&apos;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;,
    new BundleTracker&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      filename: &lt;span class=&quot;token string&quot;&gt;&apos;./static/dist/webpack-stats.json&apos;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;4. django 模板&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;{% load custom_tags %} {% load render_bundle from webpack_loader %}
&lt;span class=&quot;token doctype&quot;&gt;&amp;lt;!DOCTYPE html&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{ site.lang|default:&apos;zh-cn&apos; }}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;utf-8&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt;
      &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;viewport&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token attr-name&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;width=device-width, initial-scale=1, shrink-to-fit=no&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;

    {% block styles %} {% if is_prod %}
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;stylesheet&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{ &apos;styles.css&apos; | get_manifest_asset }}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
    {% endif %} {% endblock %}
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    {% block content %}
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;app&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    {% endblock %} {% block scripts %} {% if is_prod %}
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{ &apos;styles.js&apos; | get_manifest_asset }}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{ &apos;main.js&apos; | get_manifest_asset }}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    {% else %} {% render_bundle &apos;main&apos; %} {% endif %} {% endblock %}
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;实际项目中的演示：&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/django-webpack-hot-reload.jpg&quot; alt=&quot;django webpack热加载&quot;&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Mac 10.15 安装 libvips]]></title><description><![CDATA[gatsby 的图片处理库很方便，但是 sharp 依赖 c++编写的 。
当 Mac 升级到 catalina(10.15), 安装时一直失败，当尝试源码编译，会出现依赖的错误。
还有在 catalina…]]></description><link>https://iwisunny.github.io/2020-04-06/mac-catalina-install-libvips</link><guid isPermaLink="false">https://iwisunny.github.io/2020-04-06/mac-catalina-install-libvips</guid><pubDate>Mon, 06 Apr 2020 08:06:46 GMT</pubDate><content:encoded>&lt;p&gt;gatsby 的图片处理库&lt;code class=&quot;language-text&quot;&gt;sharp&lt;/code&gt;很方便，但是 sharp 依赖 c++编写的 &lt;code class=&quot;language-text&quot;&gt;libvips&lt;/code&gt;。
当 Mac 升级到 catalina(10.15), &lt;code class=&quot;language-text&quot;&gt;brew&lt;/code&gt;安装时一直失败，当尝试源码编译，会出现&lt;code class=&quot;language-text&quot;&gt;tiff&lt;/code&gt;依赖的错误。
还有&lt;code class=&quot;language-text&quot;&gt;zlib&lt;/code&gt;在 catalina 默认的 &lt;code class=&quot;language-text&quot;&gt;pkg-config&lt;/code&gt;的配置&lt;code class=&quot;language-text&quot;&gt;zlib.pc&lt;/code&gt;错误。针对我遇到的情形，解决方式如下。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;// 从github 下载最新的gz包，vips-8.9.1.tar.gz

tar xf vips-8.9.1.tar.gz
cd vips-8.9.1

./configuration --with-jpeg --with-png --without-tiff

make

sudo make install

rm -rf node_modules

npm i --unsafe-perm --build-from-source --verbose&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;改进之处&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 markdown 内引入 png 图片，gatsby 有时会编译出错 (可能是 libvips 编译的参数不对， 或者&lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-sharp&lt;/code&gt;的 bug)&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;brew info vips&lt;/code&gt; 显示的 vips 版本始终是 8.8.x，尝试升级 brew，拉取&lt;code class=&quot;language-text&quot;&gt;brew/versions&lt;/code&gt;仓库也报错，可能是&lt;code class=&quot;language-text&quot;&gt;brew/core&lt;/code&gt;的 bug&lt;/li&gt;
&lt;li&gt;等 brew 官方发新版，最简单的就是通过&lt;code class=&quot;language-text&quot;&gt;brew install vips&lt;/code&gt;安装 libvips&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考文档&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sharp.pixelplumbing.com/install&quot;&gt;https://sharp.pixelplumbing.com/install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://libvips.github.io/libvips/install.html#building-libvips-from-a-source-tarball&quot;&gt;https://libvips.github.io/libvips/install.html#building-libvips-from-a-source-tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/21032&quot;&gt;https://github.com/gatsbyjs/gatsby/issues/21032&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[google搜索算子]]></title><description><![CDATA[allinanchor: If you start your query with allinanchor:, Google restricts results to pages containing all query terms you specify in the…]]></description><link>https://iwisunny.github.io/2019-10-26-google-advanced-operators</link><guid isPermaLink="false">https://iwisunny.github.io/2019-10-26-google-advanced-operators</guid><pubDate>Sat, 26 Oct 2019 00:12:03 GMT</pubDate><content:encoded>&lt;h2&gt;allinanchor:&lt;/h2&gt;
&lt;p&gt;If you start your query with allinanchor:, Google restricts results to pages containing all query terms you specify in the anchor text on links to the page. For example, [ allinanchor: best museums sydney ] will return only pages in which the anchor text on links to the pages contain the words “best,” “museums,” and “sydney.”&lt;/p&gt;
&lt;p&gt;Anchor text is the text on a page that is linked to another web page or a different place on the current page. When you click on anchor text, you will be taken to the page or place on the page to which it is linked. When using allinanchor: in your query, do not include any other search operators. The functionality of allinanchor: is also available through the Advanced Web Search page, under Occurrences.&lt;/p&gt;
&lt;h2&gt;allintext:&lt;/h2&gt;
&lt;p&gt;If you start your query with allintext:, Google restricts results to those containing all the query terms you specify in the text of the page. For example, [ allintext: travel packing list ] will return only pages in which the words “travel,” “packing,” and “list” appear in the text of the page. This functionality can also be obtained through the Advanced Web Search page, under Occurrences.&lt;/p&gt;
&lt;h2&gt;allintitle:&lt;/h2&gt;
&lt;p&gt;If you start your query with allintitle:, Google restricts results to those containing all the query terms you specify in the title. For example, [ allintitle: detect plagiarism ] will return only documents that contain the words “detect” and “plagiarism” in the title. This functionality can also be obtained through the Advanced Web Search page, under Occurrences.&lt;/p&gt;
&lt;p&gt;The title of a webpage is usually displayed at the top of the browser window and in the first line of Google’s search results for a page. The author of a website specifies the title of a page with the HTML TITLE element. There’s only one title in a webpage. When using allintitle: in your query, do not include any other search operators. The functionality of allintitle: is also available through the Advanced Web Search page, under Occurrences.&lt;/p&gt;
&lt;p&gt;In Image Search, the operator allintitle: will return images in files whose names contain the terms that you specify.&lt;/p&gt;
&lt;p&gt;In Google News, the operator allintitle: will return articles whose titles include the terms you specify.&lt;/p&gt;
&lt;h2&gt;allinurl:&lt;/h2&gt;
&lt;p&gt;If you start your query with allinurl:, Google restricts results to those containing all the query terms you specify in the URL. For example, [ allinurl: google faq ] will return only documents that contain the words “google” and “faq” in the URL, such as “www.google.com/help/faq.html”. This functionality can also be obtained through the Advanced Web Search page, under Occurrences.&lt;/p&gt;
&lt;p&gt;In URLs, words are often run together. They need not be run together when you’re using allinurl:.&lt;/p&gt;
&lt;p&gt;In Google News, the operator allinurl: will return articles whose titles include the terms you specify.&lt;/p&gt;
&lt;p&gt;The Uniform Resource Locator, more commonly known as URL, is the address that specifies the location of a file on the Internet. When using allinurl: in your query, do not include any other search operators. The functionality of allinurl: is also available through the Advanced Web Search page, under Occurrences.&lt;/p&gt;
&lt;h2&gt;author:&lt;/h2&gt;
&lt;p&gt;If you include author: in your query, Google will restrict your Google Groups results to include newsgroup articles by the author you specify. The author can be a full or partial name or email address. For example, [ children author:john author:doe ] or [ children author:doe@someaddress.com ] return articles that contain the word “children” written by John Doe or doe@someaddress.com.&lt;/p&gt;
&lt;p&gt;Google will search for exactly what you specify. If your query contains [ author:”John Doe” ] (with quotes), Google won’t find articles where the author is specified as “Doe, John.”&lt;/p&gt;
&lt;h2&gt;cache:&lt;/h2&gt;
&lt;p&gt;The query cache:url will display Google’s cached version of a web page, instead of the current version of the page. For example, [ cache:www.eff.org ] will show Google’s cached version of the Electronic Frontier Foundation home page.&lt;/p&gt;
&lt;p&gt;Note: Do not put a space between cache: and the URL (web address).&lt;/p&gt;
&lt;p&gt;On the cached version of a page, Google will highlight terms in your query that appear after the cache: search operator. For example, [ cache:www.pandemonia.com/flying/ fly diary ] will show Google’s cached version of Flight Diary in which Hamish Reid’s documents what’s involved in learning how to fly with the terms “fly” and “diary” highlighted.&lt;/p&gt;
&lt;h2&gt;define:&lt;/h2&gt;
&lt;p&gt;If you start your query with define:, Google shows definitions from pages on the web for the term that follows. This advanced search operator is useful for finding definitions of words, phrases, and acronyms. For example, [ define: blog ] will show definitions for “Blog” (weB LOG).&lt;/p&gt;
&lt;h2&gt;ext:&lt;/h2&gt;
&lt;p&gt;This is an undocumented alias for filetype:.&lt;/p&gt;
&lt;h2&gt;filetype:&lt;/h2&gt;
&lt;p&gt;If you include filetype:suffix in your query, Google will restrict the results to pages whose names end in suffix. For example, [ web page evaluation checklist filetype:pdf ] will return Adobe Acrobat pdf files that match the terms “web,” “page,” “evaluation,” and “checklist.” You can restrict the results to pages whose names end with pdf and doc by using the OR operator, e.g. [ email security filetype:pdf OR filetype:doc ].&lt;/p&gt;
&lt;p&gt;When you don’t specify a File Format in the Advanced Search Form or the filetype: operator, Google searches a variety of file formats; see the table in File Type Conversion.&lt;/p&gt;
&lt;h2&gt;group:&lt;/h2&gt;
&lt;p&gt;If you include group: in your query, Google will restrict your Google Groups results to newsgroup articles from certain groups or subareas. For example, [ sleep group:misc.kids.moderated ] will return articles in the group misc.kids.moderated that contain the word “sleep” and [ sleep group:misc.kids ] will return articles in the subarea misc.kids that contain the word “sleep.”&lt;/p&gt;
&lt;h2&gt;id:&lt;/h2&gt;
&lt;p&gt;This is an undocumented alias for info:.&lt;/p&gt;
&lt;h2&gt;inanchor:&lt;/h2&gt;
&lt;p&gt;If you include inanchor: in your query, Google will restrict the results to pages containing the query terms you specify in the anchor text or links to the page. For example, [ restaurants inanchor:gourmet ] will return pages in which the anchor text on links to the pages contain the word “gourmet” and the page contains the word “restaurants.”&lt;/p&gt;
&lt;h2&gt;info:&lt;/h2&gt;
&lt;p&gt;The query info:URL will present some information about the corresponding web page. For instance, [ info:gothotel.com ] will show information about the national hotel directory GotHotel.com home page.&lt;/p&gt;
&lt;p&gt;Note: There must be no space between the info: and the web page URL.&lt;/p&gt;
&lt;p&gt;This functionality can also be obtained by typing the web page URL directly into a Google search box.&lt;/p&gt;
&lt;h2&gt;insubject:&lt;/h2&gt;
&lt;p&gt;If you include insubject: in your query, Google will restrict articles in Google Groups to those that contain the terms you specify in the subject. For example, [ insubject:”falling asleep” ] will return Google Group articles that contain the phrase “falling asleep” in the subject.&lt;/p&gt;
&lt;p&gt;Equivalent to intitle:.&lt;/p&gt;
&lt;h2&gt;intext:&lt;/h2&gt;
&lt;p&gt;The query intext:term restricts results to documents containing term in the text. For instance, [ Hamish Reid intext:pandemonia ] will return documents that mention the word “pandemonia” in the text, and mention the names “Hamish” and “Reid” anywhere in the document (text or not).&lt;/p&gt;
&lt;p&gt;Note: There must be no space between the intext: and the following word.&lt;/p&gt;
&lt;p&gt;Putting intext: in front of every word in your query is equivalent to putting allintext: at the front of your query, e.g., [ intext:handsome intext:poets ] is the same as [ allintext: handsome poets ].&lt;/p&gt;
&lt;h2&gt;intitle:&lt;/h2&gt;
&lt;p&gt;The query intitle:term restricts results to documents containing term in the title. For instance, [ flu shot intitle:help ] will return documents that mention the word “help” in their titles, and mention the words “flu” and “shot” anywhere in the document (title or not).&lt;/p&gt;
&lt;p&gt;Note: There must be no space between the intitle: and the following word.&lt;/p&gt;
&lt;p&gt;Putting intitle: in front of every word in your query is equivalent to putting allintitle: at the front of your query, e.g., [ intitle:google intitle:search ] is the same as [ allintitle: google search ].&lt;/p&gt;
&lt;h2&gt;inurl:&lt;/h2&gt;
&lt;p&gt;If you include inurl: in your query, Google will restrict the results to documents containing that word in the URL. For instance, [ inurl:print site:www.googleguide.com ] searches for pages on Google Guide in which the URL contains the word “print.” It finds pdf files that are in the directory or folder named “print” on the Google Guide website. The query [ inurl:healthy eating ] will return documents that mention the words “healthy” in their URL, and mention the word “eating” anywhere in the document.&lt;/p&gt;
&lt;p&gt;Note: There must be no space between the inurl: and the following word.&lt;/p&gt;
&lt;p&gt;Putting inurl: in front of every word in your query is equivalent to putting allinurl: at the front of your query, e.g., [ inurl:healthy inurl:eating ] is the same as [ allinurl: healthy eating ].&lt;/p&gt;
&lt;p&gt;In URLs, words are often run together. They need not be run together when you’re using inurl:.&lt;/p&gt;
&lt;h2&gt;link:&lt;/h2&gt;
&lt;p&gt;The query link:URL shows pages that point to that URL. For example, to find pages that point to Google Guide’s home page, enter:&lt;/p&gt;
&lt;p&gt;[ link:www.googleguide.com ]&lt;/p&gt;
&lt;p&gt;Note: According to Google’s documentation, “you cannot combine a link: search with a regular keyword search.”&lt;/p&gt;
&lt;p&gt;Also note that when you combine link: with another advanced operator, Google may not return all the pages that match. The following queries should return lots of results, as you can see if you remove the -site: term in each of these queries.&lt;/p&gt;
&lt;p&gt;Find links to the Google home page not on Google’s own site.&lt;/p&gt;
&lt;p&gt;[ link:www.google.com -site:google.com ]&lt;/p&gt;
&lt;p&gt;Find links to the UK Owners Direct home page not on its own site.&lt;/p&gt;
&lt;p&gt;[ link:www.www.ownersdirect.co.uk -site:ownersdirect.co.uk ]&lt;/p&gt;
&lt;h2&gt;location:&lt;/h2&gt;
&lt;p&gt;If you include location: in your query on Google News, only articles from the location you specify will be returned. For example, [ queen location:canada ] will show articles that match the term “queen” from sites in Canada. Many other country names work; try them and see.&lt;/p&gt;
&lt;p&gt;Two-letter US state abbreviations match individual US states, and two-letter Canadian province abbreviations (like NS for Nova Scotia) also work — although some provinces don’t have many newspapers online, so you may not get many results. Some other two-letter abbreviations — such as UK for the United Kingdom — are also available.&lt;/p&gt;
&lt;h2&gt;movie:&lt;/h2&gt;
&lt;p&gt;If you include movie: in your query, Google will find movie-related information. For examples, see Google’s Blog.&lt;/p&gt;
&lt;h2&gt;related:&lt;/h2&gt;
&lt;p&gt;The query related:URL will list web pages that are similar to the web page you specify. For instance, [ related:www.consumerreports.org ] will list web pages that are similar to the Consumer Reports home page.&lt;/p&gt;
&lt;p&gt;Note: Don’t include a space between the related: and the web page url.&lt;/p&gt;
&lt;p&gt;You can also find similar pages from the “Similar pages” link on Google’s main results page, and from the similar selector in the Page-Specific Search area of the Advanced Search page. If you expect to search frequently for similar pages, consider installing a GoogleScout browser button, which scouts for similar pages.&lt;/p&gt;
&lt;h2&gt;site:&lt;/h2&gt;
&lt;p&gt;If you include site: in your query, Google will restrict your search results to the site or domain you specify. For example, [ admissions site:www.lse.ac.uk ] will show admissions information from London School of Economics’ site and [ peace site:gov ] will find pages about peace within the .gov domain. You can specify a domain with or without a period, e.g., either as .gov or gov.&lt;/p&gt;
&lt;p&gt;Note: Do not include a space between the “site:” and the domain.&lt;/p&gt;
&lt;p&gt;You can use many of the search operators in conjunction with the basic search operators +, –, OR, and &quot; &quot;. For example, to find information on Windows security from all sites except microsoft.com, enter:&lt;/p&gt;
&lt;p&gt;[ windows security –site:microsoft.com ]&lt;/p&gt;
&lt;p&gt;You can also restrict your results to a site or domain through the domains selector on the Advanced Search page.&lt;/p&gt;
&lt;h2&gt;source:&lt;/h2&gt;
&lt;p&gt;If you include source: in your query, Google News will restrict your search to articles from the news source with the ID you specify. For example, [ election source:new&lt;em&gt;york&lt;/em&gt;times ] will return articles with the word “election” that appear in the New York Times.&lt;/p&gt;
&lt;p&gt;To find a news source ID, enter a query that includes a term and the name of the publication you’re seeking. You can also specify the publication name in the “news source” field in the Advanced News Search form. You’ll find the news source ID in the query box, following the source: search operator. For example, let’s say you enter the publication name Ha’aretz in the News Source box, then you click the Google Search button. The results page appears, and its search box contains [ peace source:ha&lt;em&gt;aretz__subscription&lt;/em&gt; ]. This means that the news source ID is ha&lt;em&gt;aretz__subscription&lt;/em&gt;. This query will only return articles that include the word “peace” from the Israeli newspaper Ha’aretz.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[From jekyll to gatsby]]></title><description><![CDATA[While hosting personal site on github pages, jekyll is fine.
But nowadays static site generator like  is more popular which
is based on the…]]></description><link>https://iwisunny.github.io/2019-08-31-from-jekyll-to-gatsby</link><guid isPermaLink="false">https://iwisunny.github.io/2019-08-31-from-jekyll-to-gatsby</guid><pubDate>Sat, 31 Aug 2019 22:12:03 GMT</pubDate><content:encoded>&lt;p&gt;While hosting personal site on github pages, jekyll is fine.
But nowadays static site generator like &lt;code class=&quot;language-text&quot;&gt;GatsbyJs&lt;/code&gt; is more popular which
is based on the fantastic &lt;code class=&quot;language-text&quot;&gt;React&lt;/code&gt;, also my favorite language is &lt;code class=&quot;language-text&quot;&gt;javascript&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So shifting from jekyll to gatsby seems a win-win step.&lt;/p&gt;
&lt;p&gt;Happy blogging :-)&lt;/p&gt;
&lt;h4&gt;Reference&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.org/&quot;&gt;GatsbyJs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jarednielsen.com/deploy-gatsbyjs-github-pages-user/&quot;&gt;How to Deploy a GatsbyJS Blog on GitHub Pages as a User Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item></channel></rss>